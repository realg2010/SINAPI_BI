SUBROUTINE JSL.TOPS.XTR.FT

*============================================
* Title: BI Funds Transfer Data Extraction
* Initial Author: Yisau Ramon ; For Tops Analytics
* Date: 1st May 2018
*============================================

$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_F.FUNDS.TRANSFER
$INSERT I_F.DATES
$INSERT I_F.COMPANY
$INSERT I_F.INTERCO.PARAMETER

GOSUB INIT
GOSUB PROCESS
RETURN

INIT:
	FN.INTERCO='F.INTERCO.PARAMETER'
	F.INTERCO=''
	CALL OPF(FN.INTERCO,F.INTERCO)
	LWORK.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY) ; CR.BRANCH.NAME='' ; DR.BRANCH.NAME='' ; BRANCH.NAME=''
	DB.DATE=TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2] ; OUT.ARR='' ; R.FT='' ; PY.LIST='' ; DLM='|'
	REPORT.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY)[1,4]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[5,2]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[7,2]
	SYS.ID='SYSTEM' ; API.ID='JSL.TOPS.API' ; V.RESPONSE='' ; RET.ERR=''
	READ R.INTERCO FROM F.INTERCO,SYS.ID ELSE NULL
	MNE.LIST=R.INTERCO<ST.ICP.FIN.MNEMONIC>
RETURN

PROCESS:
     MNE.CNT=DCOUNT(MNE.LIST,@VM)
     FOR J=1 TO MNE.CNT
	 MNE=MNE.LIST<1,J>
     FN.FT='F':MNE:'.FUNDS.TRANSFER$HIS'
	 F.FT=''
	 CALL OPF(FN.FT,F.FT)
     FT.CMD='SELECT ':FN.FT:' WITH PROCESSING.DATE EQ ':LWORK.DATE
	 CALL EB.READLIST(FT.CMD,FT.LIST,'','','')
	 LOOP
	 REMOVE FT.ID FROM FT.LIST SETTING FT.POS
	     IF FT.POS=0 THEN GOSUB LOAD.DATA
	 WHILE FT.ID:FT.POS
	 CALL F.READ(FN.FT,FT.ID,R.FT,F.FT,FT.ERR)
	 CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.FT<FT.CREDIT.COMP.CODE>,CR.BRANCH.NAME)
	 CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.FT<FT.DEBIT.COMP.CODE>,DR.BRANCH.NAME)
	 CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.FT<FT.CO.CODE>,BRANCH.NAME)
	 CHANGE ',' TO ' ' IN CR.BRANCH.NAME
	 CHANGE ',' TO ' ' IN DR.BRANCH.NAME
	 CHANGE ',' TO ' ' IN BRANCH.NAME
	 DR.DATE=R.FT<FT.DEBIT.VALUE.DATE>[1,4]:'-':R.FT<FT.DEBIT.VALUE.DATE>[5,2]:'-':R.FT<FT.DEBIT.VALUE.DATE>[7,2]
	 CR.DATE=R.FT<FT.CREDIT.VALUE.DATE>[1,4]:'-':R.FT<FT.CREDIT.VALUE.DATE>[5,2]:'-':R.FT<FT.CREDIT.VALUE.DATE>[7,2]
	 PROCESS.DATE=R.FT<FT.PROCESSING.DATE>[1,4]:'-':R.FT<FT.PROCESSING.DATE>[5,2]:'-':R.FT<FT.PROCESSING.DATE>[7,2]
	 IF R.FT<FT.EXPOSURE.DATE> THEN
         EX.DATE=R.FT<FT.EXPOSURE.DATE>[1,4]:'-':R.FT<FT.EXPOSURE.DATE>[5,2]:'-':R.FT<FT.EXPOSURE.DATE>[7,2]
         END ELSE
         EX.DATE=REPORT.DATE
         END

	 OUT.ARR=FT.ID:DLM:R.FT<FT.TRANSACTION.TYPE>:DLM:R.FT<FT.DEBIT.ACCT.NO>:DLM:R.FT<FT.DEBIT.AMOUNT>:DLM:R.FT<FT.DEBIT.CURRENCY>
	 OUT.ARR:=DLM:DR.DATE:DLM:DQUOTE(R.FT<FT.DEBIT.THEIR.REF>):DLM:DQUOTE(R.FT<FT.CREDIT.THEIR.REF>):DLM:R.FT<FT.CREDIT.ACCT.NO>
	 OUT.ARR:=DLM:R.FT<FT.CREDIT.CURRENCY>:DLM:R.FT<FT.CREDIT.AMOUNT>:DLM:CR.DATE:DLM:PROCESS.DATE
	 OUT.ARR:=DLM:DQUOTE(R.FT<FT.ORDERING.CUST>):DLM:DQUOTE(R.FT<FT.ORDERING.BANK>):DLM:R.FT<FT.ACCT.WITH.BANK>:DLM:R.FT<FT.BEN.ACCT.NO>
	 OUT.ARR:=DLM:R.FT<FT.BEN.CUSTOMER>:DLM:R.FT<FT.BEN.BANK>:DLM:R.FT<FT.CHEQUE.NUMBER>:DLM:DQUOTE(R.FT<FT.PAYMENT.DETAILS>)
	 OUT.ARR:=DLM:R.FT<FT.PROFIT.CENTRE.CUST>:DLM:R.FT<FT.PROFIT.CENTRE.DEPT>:DLM:EX.DATE
     OUT.ARR:=DLM:R.FT<FT.LOC.AMT.DEBITED>:DLM:R.FT<FT.LOC.AMT.CREDITED>:DLM:R.FT<FT.LOCAL.CHARGE.AMT>
	 OUT.ARR:=DLM:R.FT<FT.CREDIT.COMP.CODE>:DLM:DQUOTE(CR.BRANCH.NAME):DLM:R.FT<FT.DEBIT.COMP.CODE>:DLM:DQUOTE(DR.BRANCH.NAME)
	 OUT.ARR:=DLM:R.FT<FT.CO.CODE>:DLM:DQUOTE(BRANCH.NAME):DLM:R.FT<FT.LOC.POS.CHGS.AMT>:DLM:REPORT.DATE:DLM:DB.DATE
	 PY.LIST<-1>=OUT.ARR
        CNT=DCOUNT(PY.LIST,@FM)
        IF CNT EQ '80000' THEN
            GOSUB LOAD.DATA
        END
        FT.ID='' ; R.FT=''; OUT.ARR='' ; CR.BRANCH.NAME='' ; DR.BRANCH.NAME='' ; BRANCH.NAME=''
		DR.DATE='' ; CR.DATE='' ; PROCESS.DATE='' ; EX.DATE='' 
	 REPEAT
         NEXT J
RETURN
LOAD.DATA:
     IF PY.LIST NE '' THEN
     PY.LIST=TRIM(PY.LIST,',','A')
     PY.LIST=TRIM(PY.LIST,"'",'A')
     PY.LIST=TRIM(PY.LIST,"~",'A')
     CHANGE FM TO ',' IN PY.LIST
     REQUEST=PY.LIST:"~FT"
     CALL EB.CALL.JAVA.API(API.ID,REQUEST,V.RESPONSE,RET.ERR)
     PY.LIST=''
     END
    RETURN
END


===========================================================================
STAGING TABLE
===========================================================================
CREATE TABLE FUNDSTRANSFER
(
 FTID VARCHAR(50),
 TRANSACTION_TYPE VARCHAR(5),
 DEBIT_ACCT_NO VARCHAR(20),
 DEBIT_AMOUNT VARCHAR(20),
 DEBIT_CURRENCY VARCHAR(5),
 DEBIT_VALUE_DATE VARCHAR(20),
 DEBIT_THEIR_REF VARCHAR(100),
 CREDIT_THEIR_REF VARCHAR(100),
 CREDIT_ACCT_NO VARCHAR(20),
 CREDIT_CURRENCY VARCHAR(5),
 CREDIT_AMOUNT VARCHAR(20),
 CREDIT_VALUE_DATE VARCHAR(20),
 PROCESSING_DATE VARCHAR(20),
 ORDERING_CUST VARCHAR(100),
 ORDERING_BANK VARCHAR(100),
 ACCT_WITH_BANK VARCHAR(20),
 BEN_ACCT_NO VARCHAR(20),
 BEN_CUSTOMER VARCHAR(10),
 BEN_BANK VARCHAR(50),
 CHEQUE_NUMBER VARCHAR(20),
 PAYMENT_DETAILS VARCHAR(200),
 PROFIT_CENTRE_CUST VARCHAR(5),
 PROFIT_CENTRE_DEPT VARCHAR(5),
 EXPOSURE_DATE VARCHAR(20),
 AMOUNT_DEBITED VARCHAR(20),
 AMOUNT_CREDITED VARCHAR(20),
 TOTAL_CHARGE_AMOUNT VARCHAR(20),
 CREDIT_COMP_CODE VARCHAR(20),
 CR_BRANCH_NAME VARCHAR(100),
 DEBIT_COMP_CODE VARCHAR(20),
 DR_BRANCH_NAME VARCHAR(100),
 BRANCH VARCHAR(20),
 BRANCH_NAME VARCHAR(100),
 LOC_POS_CHARGE VARCHAR(20),
 REPORT_DATE VARCHAR(20),
 DB_DATE VARCHAR(20)
)

===============================================================================
STORED PROCEDURE (36 Parameters)
===============================================================================
CREATE PROCEDURE spFUNDSTRANSFER
(
IN pFTID VARCHAR(50),IN pTRANSACTION_TYPE VARCHAR(5),IN pDEBIT_ACCT_NO VARCHAR(20),IN pDEBIT_AMOUNT VARCHAR(20),
IN pDEBIT_CURRENCY VARCHAR(5),IN pDEBIT_VALUE_DATE VARCHAR(20),IN pDEBIT_THEIR_REF VARCHAR(100),IN pCREDIT_THEIR_REF VARCHAR(100),
IN pCREDIT_ACCT_NO VARCHAR(20),IN pCREDIT_CURRENCY VARCHAR(5),IN pCREDIT_AMOUNT VARCHAR(20),IN pCREDIT_VALUE_DATE VARCHAR(20),
IN pPROCESSING_DATE VARCHAR(20),IN pORDERING_CUST VARCHAR(100),IN pORDERING_BANK VARCHAR(100),IN pACCT_WITH_BANK VARCHAR(20),
IN pBEN_ACCT_NO VARCHAR(20),IN pBEN_CUSTOMER VARCHAR(10),IN pBEN_BANK VARCHAR(50),IN pCHEQUE_NUMBER VARCHAR(20),IN pPAYMENT_DETAILS VARCHAR(200),
IN pPROFIT_CENTRE_CUST VARCHAR(5),IN pPROFIT_CENTRE_DEPT VARCHAR(5),IN pEXPOSURE_DATE VARCHAR(20),IN pAMOUNT_DEBITED VARCHAR(20),
IN pAMOUNT_CREDITED VARCHAR(20),IN pTOTAL_CHARGE_AMOUNT VARCHAR(20),IN pCREDIT_COMP_CODE VARCHAR(20),IN pCR_BRANCH_NAME VARCHAR(100),
IN pDEBIT_COMP_CODE VARCHAR(20),IN pDR_BRANCH_NAME VARCHAR(100),IN pBRANCH VARCHAR(20),IN pBRANCH_NAME VARCHAR(100),IN pLOC_POS_CHARGE VARCHAR(20),
IN pREPORT_DATE VARCHAR(20),IN pDB_DATE VARCHAR(20)
)
LANGUAGE SQL
BEGIN
 INSERT INTO FUNDSTRANSFER 
 (
 FTID,TRANSACTION_TYPE,DEBIT_ACCT_NO,DEBIT_AMOUNT,DEBIT_CURRENCY,DEBIT_VALUE_DATE,DEBIT_THEIR_REF,
 CREDIT_THEIR_REF,CREDIT_ACCT_NO,CREDIT_CURRENCY,CREDIT_AMOUNT,CREDIT_VALUE_DATE,PROCESSING_DATE,
 ORDERING_CUST,ORDERING_BANK,ACCT_WITH_BANK,BEN_ACCT_NO,BEN_CUSTOMER,BEN_BANK,CHEQUE_NUMBER,
 PAYMENT_DETAILS,PROFIT_CENTRE_CUST,PROFIT_CENTRE_DEPT,EXPOSURE_DATE,AMOUNT_DEBITED,
 AMOUNT_CREDITED,TOTAL_CHARGE_AMOUNT,CREDIT_COMP_CODE,CR_BRANCH_NAME,DEBIT_COMP_CODE,
 DR_BRANCH_NAME,BRANCH,BRANCH_NAME,LOC_POS_CHARGE,REPORT_DATE,DB_DATE
)
VALUES
(
pFTID,pTRANSACTION_TYPE,pDEBIT_ACCT_NO,pDEBIT_AMOUNT,pDEBIT_CURRENCY,pDEBIT_VALUE_DATE,
pDEBIT_THEIR_REF,pCREDIT_THEIR_REF,pCREDIT_ACCT_NO,pCREDIT_CURRENCY,pCREDIT_AMOUNT,
pCREDIT_VALUE_DATE,pPROCESSING_DATE,pORDERING_CUST,pORDERING_BANK,pACCT_WITH_BANK,
pBEN_ACCT_NO,pBEN_CUSTOMER,pBEN_BANK,pCHEQUE_NUMBER,pPAYMENT_DETAILS,pPROFIT_CENTRE_CUST,
pPROFIT_CENTRE_DEPT,pEXPOSURE_DATE,pAMOUNT_DEBITED,pAMOUNT_CREDITED,pTOTAL_CHARGE_AMOUNT,
pCREDIT_COMP_CODE,pCR_BRANCH_NAME,pDEBIT_COMP_CODE,pDR_BRANCH_NAME,pBRANCH,pBRANCH_NAME,
pLOC_POS_CHARGE,pREPORT_DATE,pDB_DATE
);
END

===============================================================================
STORED PROCEDURE SQL SERVER(36 Parameters)
===============================================================================
CREATE PROCEDURE spFUNDSTRANSFER
(
@pFTID VARCHAR(50),@pTRANSACTION_TYPE VARCHAR(5),@pDEBIT_ACCT_NO VARCHAR(20),@pDEBIT_AMOUNT VARCHAR(20),
@pDEBIT_CURRENCY VARCHAR(5),@pDEBIT_VALUE_DATE VARCHAR(20),@pDEBIT_THEIR_REF VARCHAR(100),@pCREDIT_THEIR_REF VARCHAR(100),
@pCREDIT_ACCT_NO VARCHAR(20),@pCREDIT_CURRENCY VARCHAR(5),@pCREDIT_AMOUNT VARCHAR(20),@pCREDIT_VALUE_DATE VARCHAR(20),
@pPROCESSING_DATE VARCHAR(20),@pORDERING_CUST VARCHAR(100),@pORDERING_BANK VARCHAR(100),@pACCT_WITH_BANK VARCHAR(20),
@pBEN_ACCT_NO VARCHAR(20),@pBEN_CUSTOMER VARCHAR(10),@pBEN_BANK VARCHAR(50),@pCHEQUE_NUMBER VARCHAR(20),@pPAYMENT_DETAILS VARCHAR(200),
@pPROFIT_CENTRE_CUST VARCHAR(5),@pPROFIT_CENTRE_DEPT VARCHAR(5),@pEXPOSURE_DATE VARCHAR(20),@pAMOUNT_DEBITED VARCHAR(20),
@pAMOUNT_CREDITED VARCHAR(20),@pTOTAL_CHARGE_AMOUNT VARCHAR(20),@pCREDIT_COMP_CODE VARCHAR(20),@pCR_BRANCH_NAME VARCHAR(100),
@pDEBIT_COMP_CODE VARCHAR(20),@pDR_BRANCH_NAME VARCHAR(100),@pBRANCH VARCHAR(20),@pBRANCH_NAME VARCHAR(100),@pLOC_POS_CHARGE VARCHAR(20),
@pREPORT_DATE VARCHAR(20),@pDB_DATE VARCHAR(20)
)
AS
BEGIN
 INSERT INTO FUNDSTRANSFER 
 (
 FTID,TRANSACTION_TYPE,DEBIT_ACCT_NO,DEBIT_AMOUNT,DEBIT_CURRENCY,DEBIT_VALUE_DATE,DEBIT_THEIR_REF,
 CREDIT_THEIR_REF,CREDIT_ACCT_NO,CREDIT_CURRENCY,CREDIT_AMOUNT,CREDIT_VALUE_DATE,PROCESSING_DATE,
 ORDERING_CUST,ORDERING_BANK,ACCT_WITH_BANK,BEN_ACCT_NO,BEN_CUSTOMER,BEN_BANK,CHEQUE_NUMBER,
 PAYMENT_DETAILS,PROFIT_CENTRE_CUST,PROFIT_CENTRE_DEPT,EXPOSURE_DATE,AMOUNT_DEBITED,
 AMOUNT_CREDITED,TOTAL_CHARGE_AMOUNT,CREDIT_COMP_CODE,CR_BRANCH_NAME,DEBIT_COMP_CODE,
 DR_BRANCH_NAME,BRANCH,BRANCH_NAME,LOC_POS_CHARGE,REPORT_DATE,DB_DATE
)
VALUES
(
@pFTID,@pTRANSACTION_TYPE,@pDEBIT_ACCT_NO,@pDEBIT_AMOUNT,@pDEBIT_CURRENCY,@pDEBIT_VALUE_DATE,
@pDEBIT_THEIR_REF,@pCREDIT_THEIR_REF,@pCREDIT_ACCT_NO,@pCREDIT_CURRENCY,@pCREDIT_AMOUNT,
@pCREDIT_VALUE_DATE,@pPROCESSING_DATE,@pORDERING_CUST,@pORDERING_BANK,@pACCT_WITH_BANK,
@pBEN_ACCT_NO,@pBEN_CUSTOMER,@pBEN_BANK,@pCHEQUE_NUMBER,@pPAYMENT_DETAILS,@pPROFIT_CENTRE_CUST,
@pPROFIT_CENTRE_DEPT,@pEXPOSURE_DATE,@pAMOUNT_DEBITED,@pAMOUNT_CREDITED,@pTOTAL_CHARGE_AMOUNT,
@pCREDIT_COMP_CODE,@pCR_BRANCH_NAME,@pDEBIT_COMP_CODE,@pDR_BRANCH_NAME,@pBRANCH,@pBRANCH_NAME,
@pLOC_POS_CHARGE,@pREPORT_DATE,@pDB_DATE
)
END