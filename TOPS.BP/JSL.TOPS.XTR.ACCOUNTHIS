SUBROUTINE JSL.TOPS.XTR.ACCOUNTHIS

*============================================
* Title: BI Account Data Extraction
* Initial Author: Yisau Ramon ; For Tops Analytics
* Date: 1st May 2018
*============================================

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.DATES
    $INSERT I_F.POSTING.RESTRICT
	$INSERT I_F.COMPANY
	$INSERT I_F.DEPT.ACCT.OFFICER
	$INSERT I_F.INTERCO.PARAMETER
	
    GOSUB INIT
    GOSUB PROCESS
    RETURN

INIT:
    FN.INTERCO='F.INTERCO.PARAMETER'
    F.INTERCO=''
    CALL OPF(FN.INTERCO,F.INTERCO)
	
    DLM='|' ; OP.CL=0 ; OCB=0 ; OAB=0 ; OP.ACT.BAL=0 ; WBAL=0 ; V.DATE=TODAY 
	AC.ID='' ; R.AC=''; OUT.ARR='' ; PY.LIST='' 
    DB.DATE=TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2] 
	REPORT.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY)[1,4]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[5,2]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[7,2]
	SYS.ID='SYSTEM' ; API.ID='JSL.TOPS.API' ; V.RESPONSE='' ; RET.ERR=''
	READ R.INTERCO FROM F.INTERCO,SYS.ID ELSE NULL
	MNE.LIST=R.INTERCO<ST.ICP.FIN.MNEMONIC>
    RETURN

PROCESS:
    MNE.CNT=DCOUNT(MNE.LIST,@VM)
    FOR J=1 TO MNE.CNT
    MNE=MNE.LIST<1,J>

    FN.AC='F':MNE:'.ACCOUNT$HIS'
    F.AC=''
    CALL OPF(FN.AC,F.AC)
    AC.CMD='SELECT ':FN.AC:' WITH RECORD.STATUS EQ "CLOSED"'
    CALL EB.READLIST(AC.CMD,AC.LIST,'','','')
    LOOP
        REMOVE AC.ID FROM AC.LIST SETTING AC.POS
        IF AC.POS=0 THEN GOSUB LOAD.DATA
    WHILE AC.ID:AC.POS
        CALL F.READ(FN.AC,AC.ID,R.AC,F.AC,AC.ERR)
		CALL DBR('POSTING.RESTRICT':FM:AC.POS.DESCRIPTION,R.AC<AC.POSTING.RESTRICT>,PO.DESC)
		OP.DTE=R.AC<AC.OPENING.DATE>[1,4]:'-':R.AC<AC.OPENING.DATE>[5,2]:'-':R.AC<AC.OPENING.DATE>[7,2]
		FNAME=DQUOTE(R.AC<AC.ACCOUNT.TITLE.1>) ; WBAL=R.AC<AC.WORKING.BALANCE> ; OAB=R.AC<AC.ONLINE.ACTUAL.BAL>
		SNAME=DQUOTE(R.AC<AC.SHORT.TITLE>) ; OCB=R.AC<AC.ONLINE.CLEARED.BAL> ; OP.ACT.BAL=R.AC<AC.OPEN.ACTUAL.BAL>
		OP.CL.BAL=R.AC<AC.OPEN.CLEARED.BAL> ; CLOSURE.DATE='20':R.AC<AC.DATE.TIME>[1,6]
		CLOSURE.DATE=CLOSURE.DATE[1,4]:'-':CLOSURE.DATE[5,2]:'-':CLOSURE.DATE[7,2]
		CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.AC<AC.CO.CODE>,BRANCH.NAME)
		CALL DBR('DEPT.ACCT.OFFICER':FM:EB.DAO.NAME,R.AC<AC.ACCOUNT.OFFICER>,OFFICER.NAME)
		CALL DBR('DEPT.ACCT.OFFICER':FM:EB.DAO.NAME,R.AC<AC.OTHER.OFFICER>,OTHER.NAME)
		CALL DBR('CATEGORY':FM:EB.CAT.DESCRIPTION,R.AC<AC.CATEGORY>,CATEGORY.DESC)
		CHANGE ',' TO ' ' IN FNAME
		CHANGE ',' TO ' ' IN SNAME
		CHANGE ',' TO ' ' IN BRANCH.NAME
		CHANGE ',' TO ' ' IN OFFICER.NAME
		CHANGE ',' TO ' ' IN OTHER.NAME
		CHANGE ',' TO ' ' IN CATEGORY.DESC
		OUT.ARR=AC.ID:DLM:R.AC<AC.CUSTOMER>:DLM:R.AC<AC.CATEGORY>:DLM:DQUOTE(CATEGORY.DESC):DLM:FNAME:DLM:SNAME:DLM:R.AC<AC.CURRENCY>
		OUT.ARR:=DLM:R.AC<AC.ACCOUNT.OFFICER>:DLM:DQUOTE(OFFICER.NAME):DLM:OP.DTE:DLM:WBAL:DLM:OAB:DLM:OCB:DLM:OP.ACT.BAL:DLM:OP.CL
		OUT.ARR:=DLM:R.AC<AC.POSTING.RESTRICT>:DLM:DQUOTE(PO.DESC):DLM:R.AC<AC.INACTIV.MARKER>
		OUT.ARR:=DLM:R.AC<AC.ALT.ACCT.ID>:DLM:R.AC<AC.OTHER.OFFICER>:DLM:DQUOTE(OTHER.NAME):DLM:R.AC<AC.CO.CODE>:DLM:DQUOTE(BRANCH.NAME)
		OUT.ARR:=DLM:CLOSURE.DATE:DLM:REPORT.DATE:DLM:DB.DATE

        PY.LIST<-1>=OUT.ARR
		CNT=DCOUNT(PY.LIST,FM)
         IF CNT GE '80000' THEN
            GOSUB LOAD.DATA
         END
        AC.ID='' ; R.AC=''; OUT.ARR='' ; SNAME='' ; FNAME='' ; OP.DTE='' ; OP.CL=''
		BRANCH.NAME='' ; ACCR.CR=0 ; ACCR.DR=0 ; OP.ACT.BAL=0 ; OAB=0 ; WBAL=0 ; OCB=0 
		OFFICER.NAME='' ; OTHER.NAME='' ; CATEGORY.DESC='' ; CLOSURE.DATE=''
		
    REPEAT
	NEXT J
    RETURN
LOAD.DATA:
	 IF PY.LIST NE '' THEN
	 PY.LIST=TRIM(PY.LIST,',','A')
	 PY.LIST=TRIM(PY.LIST,"'",'A')
	 PY.LIST=TRIM(PY.LIST,"~",'A')
	 CHANGE FM TO ',' IN PY.LIST
     REQUEST=PY.LIST:"~ACH"
       CALL EB.CALL.JAVA.API(API.ID,REQUEST,V.RESPONSE,RET.ERR)
     PY.LIST=''
	 END
    RETURN
END


=================================================================================================
STAGING TABLE SCHEMA
=================================================================================================
CREATE TABLE ACCOUNTHIS
(
   ACCOUNTID VARCHAR(20),
   CUSTOMERID VARCHAR(10),
   CATEGORY VARCHAR(10),
   CATEGORY_DESC VARCHAR(100),
   ACCOUNT_TITLE_1 VARCHAR(100),
   SHORT_TITLE VARCHAR(100),
   CURRENCY VARCHAR(5),
   ACCOUNT_OFFICER VARCHAR(10),
   OFFICER_NAME VARCHAR(100),
   OPENING_DATE VARCHAR(20),
   WORKING_BALANCE VARCHAR(20),
   ONLINE_ACTUAL_BAL VARCHAR(20),
   ONLINE_CLEARED_BAL VARCHAR(20),
   OPEN_ACTUAL_BAL VARCHAR(20),
   OPEN_CLEARED_BAL VARCHAR(20),
   POSTING_RESTRICT VARCHAR(10),
   POSTING_RESTRICT_DESC VARCHAR(100),
   INACTIV_MARKER VARCHAR(5),
   ALT_ACCT_ID VARCHAR(50),
   OTHER_OFFICER VARCHAR(10),
   OTHER_NAME VARCHAR(100),
   BRANCH VARCHAR(50),
   BRANCH_NAME VARCHAR(100),
   CLOSURE_DATE VARCHAR(20),
   REPORT_DATE VARCHAR(20),
   DB_DATE VARCHAR(20)
)

=====================================================================================
DW TABLES
=====================================================================================
CREATE TABLE DimACCOUNTHIS
(
   ACCOUNTDWKEY INT IDENTITY PRIMARY KEY,
   ACCOUNTID VARCHAR(20),
   CUSTOMERID VARCHAR(10),
   CATEGORY VARCHAR(10),
   CATEGORY_DESC VARCHAR(100),
   ACCOUNT_TITLE_1 VARCHAR(100),
   SHORT_TITLE VARCHAR(100),
   CURRENCY VARCHAR(5),
   ACCOUNT_OFFICER VARCHAR(10),
   OFFICER_NAME VARCHAR(100),
   OPENING_DATE VARCHAR(20),
   WORKING_BALANCE VARCHAR(20),
   ONLINE_ACTUAL_BAL VARCHAR(20),
   ONLINE_CLEARED_BAL VARCHAR(20),
   OPEN_ACTUAL_BAL VARCHAR(20),
   OPEN_CLEARED_BAL VARCHAR(20),
   POSTING_RESTRICT VARCHAR(10),
   POSTING_RESTRICT_DESC VARCHAR(100),
   INACTIV_MARKER VARCHAR(5),
   ALT_ACCT_ID VARCHAR(50),
   OTHER_OFFICER VARCHAR(10),
   OTHER_NAME VARCHAR(100),
   BRANCH VARCHAR(50),
   BRANCH_NAME VARCHAR(100),
   CLOSURE_DATE VARCHAR(20),
   CURRENT_FLAG BIT DEFAULT 1
)
GO

=====================================================================================
STORED PROCEDURE (26 Parameters)
=====================================================================================

CREATE PROCEDURE spACCOUNTHIS
(
   IN pACCOUNTID VARCHAR(20),IN pCUSTOMERID VARCHAR(10),IN pCATEGORY VARCHAR(10),IN pCATEGORY_DESC VARCHAR(100),IN pACCOUNT_TITLE_1 VARCHAR(100),
   IN pSHORT_TITLE VARCHAR(100),IN pCURRENCY VARCHAR(5),IN pACCOUNT_OFFICER VARCHAR(10),IN pOFFICER_NAME VARCHAR(100),IN pOPENING_DATE VARCHAR(20),
   IN pWORKING_BALANCE VARCHAR(20),IN pONLINE_ACTUAL_BAL VARCHAR(20),IN pONLINE_CLEARED_BAL VARCHAR(20),
   IN pOPEN_ACTUAL_BAL VARCHAR(20),IN pOPEN_CLEARED_BAL VARCHAR(20),
   IN pPOSTING_RESTRICT VARCHAR(10),IN pPOSTING_RESTRICT_DESC VARCHAR(100),IN pINACTIV_MARKER VARCHAR(5),IN pALT_ACCT_ID VARCHAR(50),
   IN pOTHER_OFFICER VARCHAR(10),IN pOTHER_NAME VARCHAR(100),IN pBRANCH VARCHAR(50),IN pBRANCH_NAME VARCHAR(100),
   IN pCLOSURE_DATE VARCHAR(20),IN pREPORT_DATE VARCHAR(20),IN pDB_DATE VARCHAR(20)
)
LANGUAGE SQL
BEGIN
 INSERT INTO ACCOUNTHIS
 (
   ACCOUNTID,CUSTOMERID,CATEGORY,CATEGORY_DESC,ACCOUNT_TITLE_1,SHORT_TITLE,CURRENCY,ACCOUNT_OFFICER,OFFICER_NAME,OPENING_DATE,
   WORKING_BALANCE,ONLINE_ACTUAL_BAL,ONLINE_CLEARED_BAL,OPEN_ACTUAL_BAL,OPEN_CLEARED_BAL,
   POSTING_RESTRICT,POSTING_RESTRICT_DESC,INACTIV_MARKER,ALT_ACCT_ID,OTHER_OFFICER,OTHER_NAME,
   BRANCH,BRANCH_NAME,CLOSURE_DATE,REPORT_DATE,DB_DATE
)
VALUES
(
   pACCOUNTID,pCUSTOMERID,pCATEGORY,pCATEGORY,pACCOUNT_TITLE_1,pSHORT_TITLE,pCURRENCY,pACCOUNT_OFFICER,pOFFICER_NAME,pOPENING_DATE,
   pWORKING_BALANCE,pONLINE_ACTUAL_BAL,pONLINE_CLEARED_BAL,pOPEN_ACTUAL_BAL,pOPEN_CLEARED_BAL,
   pPOSTING_RESTRICT,pPOSTING_RESTRICT_DESC,pINACTIV_MARKER,pALT_ACCT_ID,
   pOTHER_OFFICER,pOTHER_NAME,pBRANCH,pBRANCH_NAME,pCLOSURE_DATE,pREPORT_DATE,pDB_DATE

);
END

=====================================================================================
STORED PROCEDURE MS SQL SERVER (26 Parameters)
=====================================================================================

CREATE PROCEDURE spACCOUNTHIS
(
   @pACCOUNTID VARCHAR(20),@pCUSTOMERID VARCHAR(10),@pCATEGORY VARCHAR(10),@pCATEGORY_DESC VARCHAR(100),@pACCOUNT_TITLE_1 VARCHAR(100),
   @pSHORT_TITLE VARCHAR(100),@pCURRENCY VARCHAR(5),@pACCOUNT_OFFICER VARCHAR(10),@pOFFICER_NAME VARCHAR(100),@pOPENING_DATE VARCHAR(20),
   @pWORKING_BALANCE VARCHAR(20),@pONLINE_ACTUAL_BAL VARCHAR(20),@pONLINE_CLEARED_BAL VARCHAR(20),
   @pOPEN_ACTUAL_BAL VARCHAR(20),@pOPEN_CLEARED_BAL VARCHAR(20),
   @pPOSTING_RESTRICT VARCHAR(10),@pPOSTING_RESTRICT_DESC VARCHAR(100),@pINACTIV_MARKER VARCHAR(5),@pALT_ACCT_ID VARCHAR(50),
   @pOTHER_OFFICER VARCHAR(10),@pOTHER_NAME VARCHAR(100),
   @pBRANCH VARCHAR(50),@pBRANCH_NAME VARCHAR(100),@pCLOSURE_DATE VARCHAR(20),@pREPORT_DATE VARCHAR(20),@pDB_DATE VARCHAR(20)
)
AS
BEGIN
 INSERT INTO ACCOUNTHIS
 (
   ACCOUNTID,CUSTOMERID,CATEGORY,CATEGORY_DESC,ACCOUNT_TITLE_1,SHORT_TITLE,CURRENCY,ACCOUNT_OFFICER,OFFICER_NAME,OPENING_DATE,
   WORKING_BALANCE,ONLINE_ACTUAL_BAL,ONLINE_CLEARED_BAL,OPEN_ACTUAL_BAL,OPEN_CLEARED_BAL,
   POSTING_RESTRICT,POSTING_RESTRICT_DESC,INACTIV_MARKER,ALT_ACCT_ID,OTHER_OFFICER,
   OTHER_NAME,BRANCH,BRANCH_NAME,CLOSURE_DATE,REPORT_DATE,DB_DATE
)
VALUES(@pACCOUNTID,@pCUSTOMERID,@pCATEGORY,@pCATEGORY_DESC,@pACCOUNT_TITLE_1,@pSHORT_TITLE,@pCURRENCY,@pACCOUNT_OFFICER,
      @pOFFICER_NAME,@pOPENING_DATE,@pWORKING_BALANCE,@pONLINE_ACTUAL_BAL,@pONLINE_CLEARED_BAL,@pOPEN_ACTUAL_BAL,
	  @pOPEN_CLEARED_BAL,@pPOSTING_RESTRICT,@pPOSTING_RESTRICT_DESC,@pINACTIV_MARKER,
      @pALT_ACCT_ID,@pOTHER_OFFICER,@pOTHER_NAME,@pBRANCH,@pBRANCH_NAME,@pCLOSURE_DATE,@pREPORT_DATE,@pDB_DATE
      )
END