SUBROUTINE JSL.TOPS.XTR.MONEY.MARKET

*============================================
* Title: BI Money Market (MM) Data Extraction
* Initial Author: Yisau Ramon ; For Tops Analytics
* Date: 9th May 2018
*============================================

$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_F.MM.MONEY.MARKET
$INSERT I_F.DATES
$INSERT I_F.CATEGORY
$INSERT I_F.COMPANY
$INSERT I_F.INTERCO.PARAMETER

GOSUB INIT
GOSUB PROCESS
RETURN

INIT:
	FN.INTERCO='F.INTERCO.PARAMETER'
	F.INTERCO=''
	CALL OPF(FN.INTERCO,F.INTERCO)
    DLM='|'
	
	REPORT.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY)[1,4]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[5,2]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[7,2]
    DB.DATE=TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2] ;API.ID='JSL.TOPS.API' ; V.RESPONSE='' ; RET.ERR=''
	SYS.ID='SYSTEM'
	READ R.INTERCO FROM F.INTERCO,SYS.ID ELSE NULL
	MNE.LIST=R.INTERCO<ST.ICP.FIN.MNEMONIC>
RETURN

PROCESS:
      MNE.CNT=DCOUNT(MNE.LIST,@VM)
      FOR J=1 TO MNE.CNT
      MNE=MNE.LIST<1,J>
      FN.MM='F':MNE:'.MM.MONEY.MARKET'
	  F.MM=''
	  CALL OPF(FN.MM,F.MM)
      MM.CMD='SELECT ':FN.MM:' WITH STATUS NE "LIQ"'
	  CALL EB.READLIST(MM.CMD,MM.LIST,'','','')
	  LOOP
	  REMOVE MM.ID FROM MM.LIST SETTING MM.POS
	          IF MM.POS=0 THEN GOSUB LOAD.DATA
	  WHILE MM.ID:MM.POS
	  	 CALL F.READ(FN.MM,MM.ID,R.MM,F.MM,MM.ERR) 
		 
		 D.D=R.MM<MM.DEAL.DATE>[1,4]:'-':R.MM<MM.DEAL.DATE>[5,2]:'-':R.MM<MM.DEAL.DATE>[7,2]
		 V.D=R.MM<MM.VALUE.DATE>[1,4]:'-':R.MM<MM.VALUE.DATE>[5,2]:'-':R.MM<MM.VALUE.DATE>[7,2]
		 M.D=R.MM<MM.MATURITY.DATE>[1,4]:'-':R.MM<MM.MATURITY.DATE>[5,2]:'-':R.MM<MM.MATURITY.DATE>[7,2]
		 CALL DBR('CATEGORY':FM:EB.CAT.DESCRIPTION,R.MM<MM.CATEGORY>,CATEGORY.DESC)
		 CALL DBR('DEPT.ACCT.OFFICER':FM:EB.DAO.NAME,R.MM<MM.MIS.ACCT.OFFICER>,OFFICER.NAME)
		 CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.MM<MM.CO.CODE>,BRANCH.NAME)
		 CHANGE ',' TO ' ' IN CATEGORY.DESC
		 CHANGE ',' TO ' ' IN OFFICER.NAME
		 CHANGE ',' TO ' ' IN BRANCH.NAME
		 OUT.ARR=MM.ID:DLM:R.MM<MM.CUSTOMER.ID>:DLM:R.MM<MM.CURRENCY>:DLM:R.MM<MM.PRINCIPAL>:DLM:D.D:DLM:V.D:DLM:M.D
		 OUT.ARR:=DLM:R.MM<MM.CATEGORY>:DLM:DQUOTE(CATEGORY.DESC):DLM:R.MM<MM.TOT.INTEREST.AMT>:DLM:R.MM<MM.AUTO.ROLLOVER>:DLM:R.MM<MM.DRAWDOWN.ACCOUNT>
		 OUT.ARR:=DLM:R.MM<MM.PRIN.LIQ.ACCT>:DLM:R.MM<MM.INT.LIQ.ACCT>:DLM:R.MM<MM.MIS.ACCT.OFFICER>:DLM:DQUOTE(OFFICER.NAME)
		 OUT.ARR:=DLM:R.MM<MM.STATUS>:DLM:R.MM<MM.TOT.INT.TAX>:DLM:R.MM<MM.CO.CODE>:DLM:BRANCH.NAME:DLM:REPORT.DATE:DLM:DB.DATE
		 
         PY.LIST<-1>=OUT.ARR
         CNT=DCOUNT(PY.LIST,@FM)
         IF CNT EQ '80000' THEN
            GOSUB LOAD.DATA
         END
		 D.D='' ; M.D='' ; V.D='' ; R.MM='' ; MM.ID='' ; CATEGORY.DESC='' ; OFFICER.NAME='' ; OUT.ARR=''
	  REPEAT
        NEXT J
      RETURN
LOAD.DATA:
      IF PY.LIST NE '' THEN
      PY.LIST=TRIM(PY.LIST,',','A')
      PY.LIST=TRIM(PY.LIST,"'",'A')
      PY.LIST=TRIM(PY.LIST,"~",'A')
      CHANGE FM TO ',' IN PY.LIST
      REQUEST=PY.LIST:"~MM"
      CALL EB.CALL.JAVA.API(API.ID,REQUEST,V.RESPONSE,RET.ERR)
      PY.LIST=''
      END
      RETURN  
END

=========================================================================
STAGING TABLE SCHEMA
=========================================================================
CREATE TABLE MONEYMARKET
(
 MM_ID VARCHAR(20),
 CUSTOMERID VARCHAR(10),
 CURRENCY VARCHAR(5),
 PRINCIPAL VARCHAR(20),
 DEAL_DATE VARCHAR(20),
 VALUE_DATE VARCHAR(20),
 MATURITY_DATE VARCHAR(20),
 CATEGORY VARCHAR(10),
 CATEGORY_DESC VARCHAR(100),
 TOT_INT_AMT VARCHAR(20),
 AUTO_ROLLOVER VARCHAR(5),
 DRAWDOWN_ACCOUNT VARCHAR(20),
 PRIN_LIQ_ACCT VARCHAR(20),
 INT_LIQ_ACCT VARCHAR(20),
 ACCOUNT_OFFICER VARCHAR(10),
 OFFICER_NAME VARCHAR(100),
 STATUS VARCHAR(5),
 TOT_INT_TAX VARCHAR(20),
 BRANCH VARCHAR(20),
 BRANCH_NAME VARCHAR(100),
 REPORT_DATE VARCHAR(20),
 DB_DATE VARCHAR(20)
)

==============================================================================
 DW TABLES
==============================================================================
CREATE TABLE DimMONEYMARKET
(
 MMDWKEY INT IDENTITY PRIMARY KEY,
 MM_ID VARCHAR(20),
 CUSTOMERID VARCHAR(10),
 CURRENCY VARCHAR(5),
 CATEGORY VARCHAR(10),
 CATEGORY_DESC VARCHAR(100),
 AUTO_ROLLOVER VARCHAR(5),
 DRAWDOWN_ACCOUNT VARCHAR(20),
 PRIN_LIQ_ACCT VARCHAR(20),
 INT_LIQ_ACCT VARCHAR(20),
 ACCOUNT_OFFICER VARCHAR(10),
 OFFICER_NAME VARCHAR(100),
 STATUS VARCHAR(5),
 BRANCH VARCHAR(20),
 BRANCH_NAME VARCHAR(100),
 CURRENT_FLAG BIT DEFAULT 1
)
GO
CREATE TABLE FactMONEYMARKET
(
 MMDWKEY INT FOREIGN KEY REFERENCES DimMONEYMARKET(MMDWKEY),
 CUSTOMERDWKEY INT FOREIGN KEY REFERENCES DimCUSTOMER(CUSTOMERDWKEY),
 PRINCIPAL MONEY,
 TOT_INT_AMT MONEY,
 TOT_INT_TAX MONEY,
 DEAL_DATE DATE,
 VALUE_DATE DATE,
 MATURITY_DATE DATE,
 REPORT_DATE DATE,
 DB_DATE DATE
)
GO
ALTER TABLE FactMONEYMARKET
REBUILD WITH (DATA_COMPRESSION=PAGE)
GO
CREATE CLUSTERED INDEX IDX_FactMONEYMARKET_REPORT_DATE ON FactMONEYMARKET(REPORT_DATE)
CREATE NONCLUSTERED INDEX IDX_FactMONEYMARKET_MMDWKEY ON FactMONEYMARKET(MMDWKEY)
GO
==============================================================================
STORED PROCEDURE DB2 (22 Parameters)
==============================================================================
CREATE PROCEDURE spMONEYMARKET
(
 IN pMM_ID VARCHAR(20),IN pCUSTOMERID VARCHAR(10),IN pCURRENCY VARCHAR(5),IN pPRINCIPAL VARCHAR(20),
 IN pDEAL_DATE VARCHAR(20),IN pVALUE_DATE VARCHAR(20),IN pMATURITY_DATE VARCHAR(20),IN pCATEGORY VARCHAR(5),IN pCATEGORY_DESC VARCHAR(100),
 IN pTOT_INT_AMT VARCHAR(20),IN pAUTO_ROLLOVER VARCHAR(1),IN pDRAWDOWN_ACCOUNT VARCHAR(20),IN pPRIN_LIQ_ACCT VARCHAR(20),
 IN pINT_LIQ_ACCT VARCHAR(20),IN pACCOUNT_OFFICER VARCHAR(10),IN pOFFICER_NAME VARCHAR(100),IN pSTATUS VARCHAR(5),IN pTOT_INT_TAX VARCHAR(20),
 IN pBRANCH VARCHAR(20),IN pBRANCH_NAME VARCHAR(100),IN pREPORT_DATE VARCHAR(20),
 IN pDB_DATE VARCHAR(20)
)
LANGUAGE SQL
BEGIN
   INSERT INTO MONEYMARKET (MM_ID,CUSTOMERID,CURRENCY,PRINCIPAL,DEAL_DATE,VALUE_DATE,MATURITY_DATE,
                             CATEGORY,CATEGORY_DESC,TOT_INT_AMT,AUTO_ROLLOVER,DRAWDOWN_ACCOUNT,PRIN_LIQ_ACCT,INT_LIQ_ACCT,
                             ACCOUNT_OFFICER,OFFICER_NAME,STATUS,TOT_INT_TAX,
                             BRANCH,BRANCH_NAME,REPORT_DATE,DB_DATE
                            )
					VALUES  (
					         pMM_ID,pCUSTOMERID,pCURRENCY,pPRINCIPAL,
                             pDEAL_DATE,pVALUE_DATE,pMATURITY_DATE,pCATEGORY,pCATEGORY_DESC,
                             pTOT_INT_AMT,pAUTO_ROLLOVER,pDRAWDOWN_ACCOUNT,pPRIN_LIQ_ACCT,
                             pINT_LIQ_ACCT,pACCOUNT_OFFICER,pOFFICER_NAME,pSTATUS,pTOT_INT_TAX,
                             pREPORT_DATE,pBRANCH,pBRANCH_NAME,pDB_DATE
					         );
END

==============================================================================
STORED PROCEDURE MS SQL SERVER (22 Parameters)
==============================================================================
CREATE PROCEDURE spMONEYMARKET
(
@pMM_ID VARCHAR(20),@pCUSTOMERID VARCHAR(10),@pCURRENCY VARCHAR(5),@pPRINCIPAL VARCHAR(20),
@pDEAL_DATE VARCHAR(20),@pVALUE_DATE VARCHAR(20),@pMATURITY_DATE VARCHAR(20),@pCATEGORY VARCHAR(5),@pCATEGORY_DESC VARCHAR(100),
@pTOT_INT_AMT VARCHAR(20),@pAUTO_ROLLOVER VARCHAR(1),@pDRAWDOWN_ACCOUNT VARCHAR(20),@pPRIN_LIQ_ACCT VARCHAR(20),
@pINT_LIQ_ACCT VARCHAR(20),@pACCOUNT_OFFICER VARCHAR(10),@pOFFICER_NAME VARCHAR(100),@pSTATUS VARCHAR(5),@pTOT_INT_TAX VARCHAR(20),
@pBRANCH VARCHAR(20),@pBRANCH_NAME VARCHAR(100),@pREPORT_DATE VARCHAR(20),@pDB_DATE VARCHAR(20)
)
AS
BEGIN
   INSERT INTO MONEYMARKET (MM_ID,CUSTOMERID,CURRENCY,PRINCIPAL,DEAL_DATE,VALUE_DATE,MATURITY_DATE,
                             CATEGORY,CATEGORY_DESC,TOT_INT_AMT,AUTO_ROLLOVER,DRAWDOWN_ACCOUNT,PRIN_LIQ_ACCT,INT_LIQ_ACCT,
                             ACCOUNT_OFFICER,OFFICER_NAME,STATUS,TOT_INT_TAX,BRANCH,BRANCH_NAME,REPORT_DATE,DB_DATE
                            )
					VALUES  (
					         @pMM_ID,@pCUSTOMERID,@pCURRENCY,@pPRINCIPAL,
                             @pDEAL_DATE,@pVALUE_DATE,@pMATURITY_DATE,@pCATEGORY,@pCATEGORY_DESC,
                             @pTOT_INT_AMT,@pAUTO_ROLLOVER,@pDRAWDOWN_ACCOUNT,@pPRIN_LIQ_ACCT,
                             @pINT_LIQ_ACCT,@pACCOUNT_OFFICER,@pOFFICER_NAME,@pSTATUS,@pTOT_INT_TAX,
                             @pBRANCH,@pBRANCH_NAME,@pREPORT_DATE,@pDB_DATE
					         )
END