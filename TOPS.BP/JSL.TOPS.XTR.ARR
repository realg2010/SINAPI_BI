    SUBROUTINE JSL.TOPS.XTR.ARR(ARR.ID)
	$INSERT I_COMMON
	$INSERT I_EQUATE
	$INSERT I_F.ACCOUNT
    $INSERT I_F.AA.OVERDUE.STATS
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_AA.APP.COMMON
    $INSERT I_AA.ACTION.CONTEXT
    $INSERT I_F.AA.TERM.AMOUNT
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.COMPANY
	$INSERT I_JSL.TOPS.XTR.COMMON
	
          *DEBUG
	    REM.CNT=N.REC-1
	    FN.ARR='F.AA.ARRANGEMENT'
        F.ARR=''
        CALL OPF(FN.ARR,F.ARR)
	    CALL F.READ(FN.ARR,ARR.ID,R.ARR,F.ARR,ARR.ERR)
        CALL F.READ(FN.ACD,ARR.ID,R.ACD,F.ACD,ACD.ERR)
		IF (R.ARR<AA.ARR.ARR.STATUS> NE 'EXPIRED' AND R.ACD<AA.AD.AGE.STATUS> NE 'CUR') THEN 
        CALL F.READ(FN.ABD,ARR.ID,R.ABD,F.ABD,ABD.ERR)
        CALL AA.SCHEDULE.PROJECTOR(ARR.ID, SIM.REF, "",CYCLE.DATE, TOT.PAYMENT, DUE.DATES, DUE.TYPES, DUE.METHODS, DUE.TYPE.AMTS, DUE.PROPS, DUE.PROP.AMTS, DUE.OUTS)     ;* Routine to Project complete schedules
        SCH.CNT=DCOUNT(DUE.PROPS,FM)
        FOR K=1 TO SCH.CNT
            BB=DUE.PROPS<K>
            LOCATE 'PRINCIPALINT' IN BB<1,1> SETTING PK.POS THEN
                PI.AMT+=DUE.PROP.AMTS<K,PK.POS>
            END
        NEXT K
        BILL.PAY.DTE=R.ACD<AA.AD.BILL.PAY.DATE>
        BILL.DTE.CNT=DCOUNT(BILL.PAY.DTE,VM)
        BILL.IDS=R.ACD<AA.AD.BILL.ID>
        BIL.CNT=DCOUNT(BILL.IDS,VM)
        FOR J=1 TO BILL.DTE.CNT
            FOR I=1 TO BIL.CNT
                READ R.ABD FROM F.ABD,BILL.IDS<1,J,I> ELSE NULL
				PROP=R.ABD<AA.BD.PROPERTY>
                LOCATE 'ACCOUNT' IN PROP<1,1> SETTING A.POS THEN
                    PR.ORIG.AMT+=R.ABD<AA.BD.OR.PROP.AMOUNT,A.POS>
                    PR.OS.AMT+=R.ABD<AA.BD.OS.PROP.AMOUNT,A.POS>
                END
                LOCATE 'PRINCIPALINT' IN PROP<1,1> SETTING PI.POS THEN
                    PI.ORIG.AMT+=R.ABD<AA.BD.OR.PROP.AMOUNT,PI.POS>
                    PI.OS.AMT+=R.ABD<AA.BD.OS.PROP.AMOUNT,PI.POS>
                END
                LOCATE 'PENALTYINT' IN PROP<1,1> SETTING PE.POS THEN
                    PE.ORIG.AMT+=R.ABD<AA.BD.OR.PROP.AMOUNT,PE.POS>
                    PE.OS.AMT+=R.ABD<AA.BD.OS.PROP.AMOUNT,PE.POS>
                END
            NEXT I
        NEXT J
        OVD.ID=ARR.ID:'-PAYMENT-OVERDUE'
        CALL F.READ(FN.OVD,OVD.ID,R.OVD,F.OVD,OVD.ERR)
        IF R.OVD THEN
            DAYS.ARR=R.OVD<AA.OD.ST.TOT.DAYS>
            CNT=DCOUNT(R.OVD<AA.OD.ST.TOT.DAYS>,VM)
            OVD=DAYS.ARR<1,CNT>
            IF OVD EQ '' THEN OVD=1
        END
        CALL AA.GET.ARRANGEMENT.CONDITIONS(ARR.ID, 'TERM.AMOUNT', '', TODAY, RET.PROP.ID, RET.PROP.REC, ER)
        RET.REC=RAISE(RET.PROP.REC)
        DISB.AMT=RET.REC<AA.AMT.AMOUNT>
        TERM=RET.REC<AA.AMT.TERM>
        AC.ID=R.ARR<AA.ARR.LINKED.APPL.ID>
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'CURACCOUNT',TODAY,CURPR,ERR.1)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'ACCPRINCIPALINT',TODAY,ACCPI,ERR.2)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'ACCPENALTYINT',TODAY,ACCPE,ERR.3)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTCOMMITMENT',TODAY,TOTCOM,ERR.4)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'CURCOMMITMENT',TODAY,CURCOM,ERR.5)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALPENALTY',TODAY,TOTDUEPR,ERR.6)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALDUEPI',TODAY,TOTDUEPI,ERR.7)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALDUEPE',TODAY,TOTDUEPE,ERR.8)
        CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.ARR<AA.ARR.CO.CODE>,BRANCH.NAME)
		CALL DBR('ACCOUNT':FM:AC.ACCOUNT.TITLE.1,AC.ID,PROD.NAME)
		CHANGE ',' TO ' ' IN PROD.NAME
		CHANGE ',' TO ' ' IN BRANCH.NAME
		IF R.ACD<AA.AD.VALUE.DATE> THEN
        V.DATE=R.ACD<AA.AD.VALUE.DATE>[1,4]:'-':R.ACD<AA.AD.VALUE.DATE>[5,2]:'-':R.ACD<AA.AD.VALUE.DATE>[7,2]
		END ELSE
		V.DATE=''
		END
		IF R.ACD<AA.AD.PAYMENT.START.DATE> THEN
        PAY.ST.DATE=R.ACD<AA.AD.PAYMENT.START.DATE>[1,4]:'-':R.ACD<AA.AD.PAYMENT.START.DATE>[5,2]:'-':R.ACD<AA.AD.PAYMENT.START.DATE>[7,2]
		END ELSE
		PAY.ST.DATE=''
		END
		IF R.ACD<AA.AD.MATURITY.DATE> THEN
        MAT.DATE=R.ACD<AA.AD.MATURITY.DATE>[1,4]:'-':R.ACD<AA.AD.MATURITY.DATE>[5,2]:'-':R.ACD<AA.AD.MATURITY.DATE>[7,2]
		END ELSE
		MAT.DATE=''
		END
		IF R.ARR<AA.ARR.START.DATE> THEN
        ST.DATE=R.ARR<AA.ARR.START.DATE>[1,4]:'-':R.ARR<AA.ARR.START.DATE>[5,2]:'-':R.ARR<AA.ARR.START.DATE>[7,2]
		END ELSE
		ST.DATE=''
		END
        OUT.ARR=ARR.ID:DLM:R.ARR<AA.ARR.CUSTOMER>:DLM:R.ARR<AA.ARR.CURRENCY>:DLM:R.ARR<AA.ARR.CO.CODE>:DLM:DQUOTE(BRANCH.NAME):DLM:R.ARR<AA.ARR.ARR.STATUS>
        OUT.ARR:=DLM:ST.DATE:DLM:R.ARR<AA.ARR.LINKED.APPL>:DLM:AC.ID:DLM:R.ARR<AA.ARR.PRODUCT.LINE>
        OUT.ARR:=DLM:R.ARR<AA.ARR.PRODUCT.GROUP>:DLM:DQUOTE(PROD.NAME)
        OUT.ARR:=DLM:R.ARR<AA.ARR.ORIG.CONTRACT.DATE>:DLM:V.DATE:DLM:PAY.ST.DATE:DLM:MAT.DATE
        OUT.ARR:=DLM:R.ACD<AA.AD.ARR.AGE.STATUS>:DLM:PR.ORIG.AMT:DLM:PR.OS.AMT:DLM:PI.ORIG.AMT:DLM:PI.OS.AMT:DLM:PE.ORIG.AMT:DLM:PE.OS.AMT:DLM:PI.AMT
        OUT.ARR:=DLM:CURPR:DLM:ACCPI:DLM:ACCPE:DLM:TOTCOM:DLM:CURCOM:DLM:TOTDUEPR:DLM:TOTDUEPI:DLM:TOTDUEPE:DLM:OVD:DLM:DISB.AMT:DLM:TERM:DLM:REPORT.DATE:DLM:DB.DATE

        PY.LIST<-1>=OUT.ARR
        CNT=DCOUNT(PY.LIST,@FM)
        IF CNT EQ '20000' THEN
            IF PY.LIST NE "" THEN
	          PY.LIST=TRIM(PY.LIST,',','A')
	          PY.LIST=TRIM(PY.LIST,"'",'A')
	          PY.LIST=TRIM(PY.LIST,"~",'A')
	          CHANGE FM TO ',' IN PY.LIST
              REQUEST=PY.LIST:"~AA"
              CALLJ "com.fdh.loader.Loader", "loader", REQUEST SETTING V.RESPONSE ON ERROR PRINT 'recieved from JAVA' : V.RESPONSE :',rtncd=':SYSTEM(0)
              PY.LIST=''
	        END
        END
		ARR.ID=''; SIM.REF='';TOT.PAYMENT=0; DUE.DATES=''; DUE.TYPES=''; DUE.METHODS=''; DUE.TYPE.AMTS=''; DUE.PROPS=''; DUE.PROP.AMTS=''; DUE.OUTS='';OUT.ARR=''
		END
		IF REM.CNT EQ 0 THEN
		    IF PY.LIST NE "" THEN
	          PY.LIST=TRIM(PY.LIST,',','A')
	          PY.LIST=TRIM(PY.LIST,"'",'A')
	          PY.LIST=TRIM(PY.LIST,"~",'A')
	          CHANGE FM TO ',' IN PY.LIST
              REQUEST=PY.LIST:"~AA"
              CALLJ "com.fdh.loader.Loader", "loader", REQUEST SETTING V.RESPONSE ON ERROR PRINT 'recieved from JAVA' : V.RESPONSE :',rtncd=':SYSTEM(0)
              PY.LIST=''
	        END
		END
    RETURN