*-----------------------------------------------------------------------------
* <Rating>453</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE JSL.TOPS.XTR.SPM

* Title:SPM JBI Extractin for Sinapi Aba Savings and Loans
* Author: Amid Salami ; For jethro Ltd
* Date: 26/07/2014
* (SAO20160909): The routine updated to relfect the new questionaire and extract the raw data out

    $INSERT T24.BP I_COMMON
    $INSERT T24.BP I_EQUATE
    $INSERT T24.BP I_F.CATEGORY
    $INSERT T24.BP I_GTS.COMMON
    $INSERT T24.BP I_F.COMPANY
    $INSERT T24.BP I_F.DATES
    $INSERT T24.BP I_F.CUSTOMER
    $INSERT I_F.JSL.MCB.PPI.CONCAT

    GOSUB INITIALISE
    GOSUB PROC.SPM.PPI

    RETURN

INITIALISE:

    YPROC.ERR = '' ; NO.BIODATA = '9' ; NO.QUESTION = '10' ; QUES.START.POS = '10' ; T24.DET = NO.BIODATA+1 ; QUES.END.POS = QUES.START.POS + NO.QUESTION -1

    FN.PPI = "F.JSL.MCB.PPI2.QUESTION" ; F.PPI = "" ; CALL OPF(FN.PPI,F.PPI)
    FN.CUS = "F.CUSTOMER" ; F.CUS = "" ;  CALL OPF(FN.CUS,F.CUS)
    FN.QUES = "F.JSL.MCB.SPM2.QUESTION" ; F.QUES = "" ; CALL OPF(FN.QUES,F.QUES)
    FN.ANS = "F.JSL.MCB.SPM2.ANSWER" ; F.ANS = "" ; CALL OPF(FN.ANS,F.ANS)
    FN.CONCAT = "F.JSL.MCB.PPI.CONCAT" ; F.CONCAT = "" ; CALL OPF(FN.CONCAT,F.CONCAT)

    CALL GET.LOC.REF("CUSTOMER", "GENDER1", GENDER.POS)

    REPORT.DATE = R.DATES(EB.DAT.LAST.WORKING.DAY)[1,4]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[5,2]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[7,2]
	DB.DATE= TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2]
    YALL.COY = R.JSL.XTR.TABLE<JSL.TAB.ALL.COMPANY>[1,1]
    REPORT.PERIOD = R.JSL.XTR.TABLE<JSL.TAB.EXTRACT.YYMM>

    RETURN



PROC.SPM.PPI:

    SELECT.CMD = 'SSELECT ':FN.CONCAT:" LIKE R...."
    CALL EB.READLIST(SELECT.CMD,PPI.ID.LIST,PPIID,PPI.NO,PPI.ERR)
    LOOP
        REMOVE PPI.ID FROM PPI.ID.LIST SETTING PPI.POSN
    WHILE PPI.ID DO
        ER.PPI = "" ; CUST.SCORE = "" ; ER.CUS = ""
        CALL F.READ(FN.CONCAT,PPI.ID,PPI.REC,F.CONCAT,ER.CONCAT)
        CUS.ID = FIELD(PPI.ID,".",3)
        CALL F.READ(FN.CUS,CUS.ID,CUS.REC,F.CUS,ER.CUS)

        FOR M = 1 TO NO.BIODATA
            YRESPONSE = FIELD(PPI.REC<SPM.CCT.PPI.ANSWER,M>,'^',2)
            IF NOT(YRESPONSE) THEN YRESPONSE = PPI.REC<SPM.CCT.PPI.ANSWER,M>
            SPM.REC<M> = YRESPONSE
            LOCATE "REVIEW.DATE" IN PPI.REC<SPM.CCT.PPI.QUESTION,1> SETTING YVM THEN
                REVIEW.DTE = R.NEW(SPM.CCT.PPI.ANSWER)<1,YVM>
                IF FIELD (REVIEW.DTE,'^',2) THEN REVIEW.DTE = FIELD(REVIEW.DTE,'^',2) ELSE REVIEW.DTE = R.NEW(SPM.CCT.PPI.ANSWER)<1,YVM>
            END ELSE
                REVIEW.DTE = TODAY
            END
            IF REPORT.PERIOD AND (REVIEW.DTE <> REPORT.PERIOD) THEN CONTINUE
        NEXT M

        IF GENDER.POS THEN SPM.REC<T24.DET> = CUS.REC<EB.CUS.LOCAL.REF><1,GENDER.POS>
        DOB = CUS.REC<EB.CUS.BIRTH.INCORP.DATE>
        YAGE = (ICONV(TODAY,"D") - ICONV(DOB,"D"))/365
        YAGE = INT(YAGE)
        BEGIN CASE

        CASE YAGE GE '18' AND YAGE LE '25'
            YAGE = 'A'
        CASE YAGE GE '26' AND YAGE LE '35'
            YAGE = 'B'
        CASE YAGE GE '36' AND YAGE LE '45'
            YAGE = 'C'
        CASE YAGE GE '46' AND YAGE LE '55'
            YAGE = 'D'

        CASE OTHERWISE
            YAGE = 'E'

        END CASE

        SPM.REC<T24.DET> = YAGE
        SPM.REC<T24.DET+1> = CUS.ID
        SPM.REC<T24.DET+2> = CUS.REC<EB.CUS.SHORT.NAME,1>

        FOR M = QUES.START.POS TO QUES.END.POS
            ASSIGNED.SCORE = PPI.REC<SPM.CCT.PPI.SCORE,M>
            IF ASSIGNED.SCORE = "" THEN ASSIGNED.SCORE = 0
            QRESPONS = FIELD(PPI.REC<SPM.CCT.PPI.ANSWER,M>,'^',2)
            IF NOT(QRESPONS) THEN QRESPONS = PPI.REC<SPM.CCT.PPI.ANSWER,M>
            SPM.REC<M+3> = QRESPONS
            CUST.SCORE += ASSIGNED.SCORE
        NEXT M

        SPM.REC<QUES.END.POS+4> = CUST.SCORE
        SPM.REC<QUES.END.POS+5> =  REPORT.DATE         ;*Report Date
        SPM.REC<QUES.END.POS+6> = DB.DATE ;*Database Date
        CONVERT ',' TO ' ' IN SPM.REC
		CONVERT FM TO '|' IN SPM.REC
		
		PY.LIST<-1>=SPM.REC
        CNT=DCOUNT(PY.LIST,@FM)
        IF CNT EQ '80000' THEN
            GOSUB LOAD.DATA
        END
        SPM.REC='' ; ASSIGNED.SCORE='' ; QRESPONS='' ; CUST.SCORE='' ; YAGE='' ; CUS.REC=''
    REPEAT
    RETURN

LOAD.DATA:
     IF PY.LIST NE "" THEN
	 PY.LIST=TRIM(PY.LIST,',','A')
	 PY.LIST=TRIM(PY.LIST,"'",'A')
	 PY.LIST=TRIM(PY.LIST,"~",'A')
	 CHANGE FM TO ',' IN PY.LIST
     REQUEST=PY.LIST:"~SPM"
     CALL EB.CALL.JAVA.API(API.ID,REQUEST,V.RESPONSE,RET.ERR)
     PY.LIST=''
     END
	 RETURN
END


=========================================================================================
CREATE TABLE SPM_DATA
(
INTERVIEWER_NAME VARCHAR(100),
DESIGNATION VARCHAR(100),
BRANCH VARCHAR(100),
SUPERVISOR VARCHAR(100),
REVIEWDATE VARCHAR(20),
TIME_STAMP VARCHAR(50),
INTERVIEW_DATE VARCHAR(20),
RELIGION VARCHAR(100),
MARITAL_STATUS VARCHAR(10),
AGE CHAR(3),
CUSTOMER_NO VARCHAR(10),
CUSTOMER_NAME VARCHAR(100),
Q1 VARCHAR(100),
Q2 VARCHAR(100),
Q3 VARCHAR(100),
Q4 VARCHAR(100),
Q5 VARCHAR(100),
Q6 VARCHAR(100),
Q7 VARCHAR(100),
Q8 VARCHAR(100),
Q9 VARCHAR(100),
Q10 VARCHAR(100),
TOTALSCORE VARCHAR(20),
REPORT_DATE VARCHAR(20),
DB_DATE VARCHAR(20)
)

=========================================================================================================================
DB2 STORED PROCEDUE (25 Parameters)
=========================================================================================================================
CREATE PROCEDURE spSPM_DATA
(
IN pINTERVIEWER_NAME VARCHAR(100),IN pDESIGNATION VARCHAR(100),IN pBRANCH VARCHAR(100),IN pSUPERVISOR VARCHAR(100),
IN pREVIEWDATE VARCHAR(20),IN pTIME_STAMP VARCHAR(50),IN pINTERVIEW_DATE VARCHAR(20),IN pRELIGION VARCHAR(100),
IN pMARITAL_STATUS VARCHAR(10),IN pAGE CHAR(3),IN pCUSTOMER_NO VARCHAR(10),IN pCUSTOMER_NAME VARCHAR(100),
IN pQ1 VARCHAR(100),IN pQ2 VARCHAR(100),IN pQ3 VARCHAR(100),IN pQ4 VARCHAR(100),IN pQ5 VARCHAR(100),
IN pQ6 VARCHAR(100),IN pQ7 VARCHAR(100),IN pQ8 VARCHAR(100),IN pQ9 VARCHAR(100),IN pQ10 VARCHAR(100),
IN pTOTALSCORE VARCHAR(20),IN pREPORT_DATE VARCHAR(20),IN pDB_DATE VARCHAR(20)
)
LANGUAGE SQL
BEGIN
INSERT INTO SPM_DATA
(INTERVIEWER_NAME,DESIGNATION,BRANCH,SUPERVISOR,REVIEWDATE,TIME_STAMP,INTERVIEW_DATE,RELIGION,MARITAL_STATUS,AGE,CUSTOMER_NO,
 CUSTOMER_NAME,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,TOTALSCORE,REPORT_DATE,DB_DATE
)
VALUES
(
 pINTERVIEWER_NAME,pDESIGNATION,BRANCH,pSUPERVISOR,pREVIEWDATE,pTIME_STAMP,
 pINTERVIEW_DATE,pRELIGION,pMARITAL_STATUS,pAGE,pCUSTOMER_NO,pCUSTOMER_NAME,
 pQ1,pQ2,pQ3,pQ4,pQ5,pQ6,pQ7,pQ8,pQ9,pQ10,pTOTALSCORE,pREPORT_DATE,pDB_DATE
);
END

===================================================================================================================================
SQL SERVER STORED PROCEDUE (25 Parameters)
===================================================================================================================================
CREATE PROCEDURE spSPM_DATA
(
@pINTERVIEWER_NAME VARCHAR(100),@pDESIGNATION VARCHAR(100),@pBRANCH VARCHAR(100),@pSUPERVISOR VARCHAR(100),
@pREVIEWDATE VARCHAR(20),@pTIME_STAMP VARCHAR(50),@pINTERVIEW_DATE VARCHAR(20),@pRELIGION VARCHAR(100),
@pMARITAL_STATUS VARCHAR(10),@pAGE CHAR(3),@pCUSTOMER_NO VARCHAR(10),@pCUSTOMER_NAME VARCHAR(100),
@pQ1 VARCHAR(100),@pQ2 VARCHAR(100),@pQ3 VARCHAR(100),@pQ4 VARCHAR(100),@pQ5 VARCHAR(100),
@pQ6 VARCHAR(100),@pQ7 VARCHAR(100),@pQ8 VARCHAR(100),@pQ9 VARCHAR(100),@pQ10 VARCHAR(100),
@pTOTALSCORE VARCHAR(20),@pREPORT_DATE VARCHAR(20),@pDB_DATE VARCHAR(20)
)
AS
BEGIN
INSERT INTO SPM_DATA
(INTERVIEWER_NAME,DESIGNATION,BRANCH,SUPERVISOR,REVIEWDATE,TIME_STAMP,INTERVIEW_DATE,RELIGION,MARITAL_STATUS,AGE,CUSTOMER_NO,
 CUSTOMER_NAME,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,TOTALSCORE,REPORT_DATE,DB_DATE
)
VALUES
(
 @pINTERVIEWER_NAME,@pDESIGNATION,@pBRANCH,@pSUPERVISOR,@pREVIEWDATE,@pTIME_STAMP,
 @pINTERVIEW_DATE,@pRELIGION,@pMARITAL_STATUS,@pAGE,@pCUSTOMER_NO,@pCUSTOMER_NAME,
 @pQ1,@pQ2,@pQ3,@pQ4,@pQ5,@pQ6,@pQ7,@pQ8,@pQ9,@pQ10,@pTOTALSCORE,@pREPORT_DATE,@pDB_DATE
)
END