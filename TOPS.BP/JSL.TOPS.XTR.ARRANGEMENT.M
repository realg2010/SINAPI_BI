    SUBROUTINE JSL.TOPS.XTR.ARRANGEMENT.M
	
*============================================
* Title: BI Arrangement Architechure (AA) Data Extraction
* Initial Author: Yisau Ramon ; For Tops Analytics
* Date: 1st May 2018
*============================================

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AA.OVERDUE.STATS
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_AA.APP.COMMON
    $INSERT I_AA.ACTION.CONTEXT
    $INSERT I_F.AA.TERM.AMOUNT
    $INSERT I_F.DATES
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.COMPANY
    $INSERT I_F.ACCOUNT
    $INSERT I_F.INTERCO.PARAMETER

    GOSUB INIT
    GOSUB PROCESS
    RETURN

INIT:

	FN.INTERCO='F.INTERCO.PARAMETER'
	F.INTERCO=''
	CALL OPF(FN.INTERCO,F.INTERCO)
    GOSUB RESET.VAR
    Y.DATE=TODAY ; FINAL.DAYS='' ; OLDEST.DATE=''
    OPEN "","/u01/tafj/TAFJ/UD/TOPS.BP" TO F.ACL.CONTIF ELSE PRINT "CAN NOT OPEN DIRECTORY"
    DLM='|' ; CYCLE.DATE=TODAY
    REPORT.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY)[1,4]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[5,2]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[7,2]
    DB.DATE=TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2]
    SYS.ID='SYSTEM'
    READ R.INTERCO FROM F.INTERCO,SYS.ID ELSE NULL
    MNE.LIST=R.INTERCO<ST.ICP.FIN.MNEMONIC>


    RETURN

PROCESS:
     MNE.CNT=DCOUNT(MNE.LIST,@VM)
     FOR Q=1 TO MNE.CNT
	 MNE=MNE.LIST<1,Q>
    FN.OVD='F':MNE:'.AA.OVERDUE.STATS'
    F.OVD=''
    CALL OPF(FN.OVD,F.OVD)

    FN.ARR='F':MNE:'.AA.ARRANGEMENT'
    F.ARR=''
    CALL OPF(FN.ARR,F.ARR)

    FN.ACD='F':MNE:'.AA.ACCOUNT.DETAILS'
    F.ACD=''
    CALL OPF(FN.ACD,F.ACD)

    FN.ABD='F':MNE:'.AA.BILL.DETAILS'
    F.ABD=''
    CALL OPF(FN.ABD,F.ABD)
    ARR.CMD='SELECT ':FN.ARR:' WITH ARR.STATUS EQ "CURRENT" OR ARR.STATUS EQ "EXPIRED"'
    CALL EB.READLIST(ARR.CMD,ARR.LIST,'','','')
    LOOP
        REMOVE ARR.ID FROM ARR.LIST SETTING ARR.POS
    WHILE ARR.ID:ARR.POS
        CALL F.READ(FN.ARR,ARR.ID,R.ARR,F.ARR,ARR.ERR)
        CALL F.READ(FN.ACD,ARR.ID,R.ACD,F.ACD,ACD.ERR)
	IF R.ARR<AA.ARR.ARR.STATUS> NE 'EXPIRED' AND R.ACD<AA.AD.ARR.AGE.STATUS> NE 'CUR' THEN
        CALL F.READ(FN.ABD,ARR.ID,R.ABD,F.ABD,ABD.ERR)
        CALL AA.SCHEDULE.PROJECTOR(ARR.ID, SIM.REF, "",CYCLE.DATE, TOT.PAYMENT, DUE.DATES, DUE.TYPES, DUE.METHODS, DUE.TYPE.AMTS, DUE.PROPS, DUE.PROP.AMTS, DUE.OUTS)     ;* Routine to Project complete schedules
        SCH.CNT=DCOUNT(DUE.PROPS,FM)
        FOR K=1 TO SCH.CNT
            BB=DUE.PROPS<K>
            LOCATE 'PRINCIPALINT' IN BB<1,1> SETTING PK.POS THEN
                PI.AMT+=DUE.PROP.AMTS<K,PK.POS>
            END
        NEXT K

        BILL.IDS=R.ACD<AA.AD.BILL.ID>
        BIL.CNT=DCOUNT(BILL.IDS,VM)

            FOR I=1 TO BIL.CNT
               
                READ R.ABD FROM F.ABD,BILL.IDS<1,I> ELSE NULL
                BIL.TYPE=R.ABD<AA.BD.BILL.TYPE>
         IF BIL.TYPE NE 'DISBURSEMENT' THEN
                 PROP=R.ABD<AA.BD.PROPERTY>
                LOCATE 'ACCOUNT' IN PROP<1,1> SETTING A.POS THEN
                    PR.ORIG.AMT+=R.ABD<AA.BD.OR.PROP.AMOUNT,A.POS>
                    PR.OS.AMT+=R.ABD<AA.BD.OS.PROP.AMOUNT,A.POS>
                END
                LOCATE 'PRINCIPALINT' IN PROP<1,1> SETTING PI.POS THEN
                    PI.ORIG.AMT+=R.ABD<AA.BD.OR.PROP.AMOUNT,PI.POS>
                    PI.OS.AMT+=R.ABD<AA.BD.OS.PROP.AMOUNT,PI.POS>
                END
                LOCATE 'PENALTYINT' IN PROP<1,1> SETTING PE.POS THEN
                    PE.ORIG.AMT+=R.ABD<AA.BD.OR.PROP.AMOUNT,PE.POS>
                    PE.OS.AMT+=R.ABD<AA.BD.OS.PROP.AMOUNT,PE.POS>
                END
		IF R.ABD<AA.BD.DELIN.OS.AMT> GT 0 THEN
		 OLDEST.DATE<-1>=R.ABD<AA.BD.PAYMENT.DATE>
		END
        END
            NEXT I
 
        OVD.ID=ARR.ID:'-PAYMENT-OVERDUE'
        CALL F.READ(FN.OVD,OVD.ID,R.OVD,F.OVD,OVD.ERR)
        IF R.OVD THEN
            DAYS.ARR=R.OVD<AA.OD.ST.TOT.DAYS>
            CNT=DCOUNT(R.OVD<AA.OD.ST.TOT.DAYS>,VM)
            OVD=DAYS.ARR<1,CNT>
            IF OVD EQ '' THEN OVD=1
        END
		N.DAYS='C'
		OLDEST.DATE=MINIMUM(OLDEST.DATE)
		IF LEN(OLDEST.DATE) EQ 8 THEN
		 CALL CDD('',OLDEST.DATE,Y.DATE,N.DAYS)
		END
        CALL AA.GET.ARRANGEMENT.CONDITIONS(ARR.ID, 'TERM.AMOUNT', '', TODAY, RET.PROP.ID, RET.PROP.REC, ER)
        RET.REC=RAISE(RET.PROP.REC)
        DISB.AMT=RET.REC<AA.AMT.AMOUNT>
        TERM=RET.REC<AA.AMT.TERM>
        AC.ID=R.ARR<AA.ARR.LINKED.APPL.ID>
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'CURACCOUNT',TODAY,CURPR,ERR.1)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'ACCPRINCIPALINT',TODAY,ACCPI,ERR.2)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'ACCPENALTYINT',TODAY,ACCPE,ERR.3)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTCOMMITMENT',TODAY,TOTCOM,ERR.4)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'CURCOMMITMENT',TODAY,CURCOM,ERR.5)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALPENALTY',TODAY,TOTDUEPR,ERR.6)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALDUEPI',TODAY,TOTDUEPI,ERR.7)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALDUEPE',TODAY,TOTDUEPE,ERR.8)
        CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.ARR<AA.ARR.CO.CODE>,BRANCH.NAME)
        CALL DBR('ACCOUNT':FM:AC.ACCOUNT.TITLE.1,AC.ID,PROD.NAME)
        CHANGE ',' TO ' ' IN PROD.NAME
        CHANGE ',' TO ' ' IN BRANCH.NAME
        V.DATE=R.ACD<AA.AD.VALUE.DATE>[1,4]:'-':R.ACD<AA.AD.VALUE.DATE>[5,2]:'-':R.ACD<AA.AD.VALUE.DATE>[7,2]
        PAY.ST.DATE=R.ACD<AA.AD.PAYMENT.START.DATE>[1,4]:'-':R.ACD<AA.AD.PAYMENT.START.DATE>[5,2]:'-':R.ACD<AA.AD.PAYMENT.START.DATE>[7,2]
        MAT.DATE=R.ACD<AA.AD.MATURITY.DATE>[1,4]:'-':R.ACD<AA.AD.MATURITY.DATE>[5,2]:'-':R.ACD<AA.AD.MATURITY.DATE>[7,2]
        ST.DATE=R.ARR<AA.ARR.START.DATE>[1,4]:'-':R.ARR<AA.ARR.START.DATE>[5,2]:'-':R.ARR<AA.ARR.START.DATE>[7,2]
		IF ISDIGIT(N.DAYS) THEN 
		FINAL.DAYS=N.DAYS 
		END ELSE 
		FINAL.DAYS=OVD 
		END
        OUT.ARR=ARR.ID:DLM:R.ARR<AA.ARR.CUSTOMER>:DLM:R.ARR<AA.ARR.CURRENCY>:DLM:R.ARR<AA.ARR.CO.CODE>:DLM:BRANCH.NAME:DLM:R.ARR<AA.ARR.ARR.STATUS>
        OUT.ARR:=DLM:ST.DATE:DLM:R.ARR<AA.ARR.LINKED.APPL>:DLM:AC.ID:DLM:R.ARR<AA.ARR.PRODUCT.LINE>
        OUT.ARR:=DLM:TRIM(R.ARR<AA.ARR.PRODUCT.GROUP>,'','D'):DLM:PROD.NAME
        OUT.ARR:=DLM:R.ARR<AA.ARR.ORIG.CONTRACT.DATE>:DLM:V.DATE:DLM:PAY.ST.DATE:DLM:MAT.DATE
        OUT.ARR:=DLM:R.ACD<AA.AD.ARR.AGE.STATUS>:DLM:PR.ORIG.AMT:DLM:PR.OS.AMT:DLM:PI.ORIG.AMT:DLM:PI.OS.AMT:DLM:PE.ORIG.AMT:DLM:PE.OS.AMT:DLM:PI.AMT
        OUT.ARR:=DLM:CURPR:DLM:ACCPI:DLM:ACCPE:DLM:TOTCOM:DLM:CURCOM:DLM:TOTDUEPR:DLM:TOTDUEPI:DLM:TOTDUEPE:DLM:FINAL.DAYS:DLM:DISB.AMT:DLM:TERM:DLM:REPORT.DATE:DLM:DB.DATE

        PY.LIST<-1>=OUT.ARR
        GOSUB RESET.VAR
        END
    REPEAT
NEXT Q
	  CHANGE '"' TO '' IN PY.LIST
	    WRITE PY.LIST TO F.ACL.CONTIF,'AA.REP-':DB.DATE:".csv"
            PY.LIST=''
    RETURN

RESET.VAR:
    AC.ID='' ; R.AC=''; ARR.ID='' ; OUT.ARR='' ; CURPR=0 ; ACCPI=0 ; ACCPE=0 ; FINAL.DAYS=''
    PR.ORIG.AMT=0 ; DISB.AMT=0 ; TOTDUEPE=0 ; CURCOM=0 ; TERM='' ; OVD='' ; PI.AMT=0 ; N.DAYS=''
    RET.PROP.REC='' ; TOTDUEPI=0 ; TOTDUEPR=0 ; TOTCOM=0 ; TOT.CHG=0 ; R.ARR='' ; MAT.DATE=''
    PR.OS.AMT=0 ; PI.ORIG.AMT=0 ; PI.OS.AMT=0 ; PE.ORIG.AMT=0 ; PE.OS.AMT=0 ; OVD.ID=''
    DAYS.ARR='' ; CNT='' ; BILL.PAY.DTE='' ; BILL.DTE.CNT='' ; BILL.IDS='' ; R.ABD='' ; OLDEST.DATE=''
    R.ACD='' ; SCH.CNT='' ; RET.REC=0 ; BIL.CNT='' ; V.DATE='' ; PAY.ST.DATE='' ; ST.DATE=''
    RETURN
END