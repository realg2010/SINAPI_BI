    SUBROUTINE JSL.TOPS.XTR.ARRANGEMENT
	
*============================================
* Title: BI Arrangement Architechure (AA) Data Extraction
* Initial Author: Yisau Ramon ; For Tops Analytics
* Date: 1st May 2018
*============================================

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AA.OVERDUE.STATS
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_AA.APP.COMMON
    $INSERT I_AA.ACTION.CONTEXT
    $INSERT I_F.AA.TERM.AMOUNT
    $INSERT I_F.DATES
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.COMPANY
    $INSERT I_F.ACCOUNT
    $INSERT I_F.INTERCO.PARAMETER	
    $INSERT I_F.DEPT.ACCT.OFFICER
	$INSERT I_F.CUSTOMER
	
    GOSUB INIT
    GOSUB PROCESS
    RETURN

INIT:
    FN.CUS='F.CUSTOMER'
	F.CUS=''
	CALL OPF(FN.CUS,F.CUS)
	
    FN.INTERCO='F.INTERCO.PARAMETER'
    F.INTERCO=''
    CALL OPF(FN.INTERCO,F.INTERCO)
    GOSUB RESET.VAR
    DLM='|' ; CYCLE.DATE=TODAY
    REPORT.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY)[1,4]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[5,2]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[7,2]
    DB.DATE=TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2] ; API.ID='JSL.TOPS.API' ; V.RESPONSE='' ; RET.ERR=''
    Y.DATE=TODAY
    SYS.ID='SYSTEM'
    READ R.INTERCO FROM F.INTERCO,SYS.ID ELSE NULL
    MNE.LIST=R.INTERCO<ST.ICP.FIN.MNEMONIC>
 
    RETURN

PROCESS:
     MNE.CNT=DCOUNT(MNE.LIST,@VM)
     FOR Q=1 TO MNE.CNT
	 MNE=MNE.LIST<1,Q>

    FN.ARR='F':MNE:'.AA.ARRANGEMENT'
    F.ARR=''
    CALL OPF(FN.ARR,F.ARR)

    FN.ACD='F':MNE:'.AA.ACCOUNT.DETAILS'
    F.ACD=''
    CALL OPF(FN.ACD,F.ACD)

    FN.ABD='F':MNE:'.AA.BILL.DETAILS'
    F.ABD=''
    CALL OPF(FN.ABD,F.ABD)

    ARR.CMD='SELECT ':FN.ARR:' WITH ARR.STATUS EQ "CURRENT" OR ARR.STATUS EQ "EXPIRED"'
    CALL EB.READLIST(ARR.CMD,ARR.LIST,'','','')

    LOOP
        REMOVE ARR.ID FROM ARR.LIST SETTING ARR.POS
        IF ARR.POS=0 THEN GOSUB LOAD.DATA
    WHILE ARR.ID:ARR.POS

        CALL F.READ(FN.ARR,ARR.ID,R.ARR,F.ARR,ARR.ERR)
        CALL F.READ(FN.ACD,ARR.ID,R.ACD,F.ACD,ACD.ERR)

		IF (R.ARR<AA.ARR.ARR.STATUS>= 'EXPIRED' AND R.ACD<AA.AD.ARR.AGE.STATUS>='CUR') THEN CONTINUE
        CALL F.READ(FN.ABD,ARR.ID,R.ABD,F.ABD,ABD.ERR)
        CALL AA.SCHEDULE.PROJECTOR(ARR.ID, SIM.REF, "",CYCLE.DATE, TOT.PAYMENT, DUE.DATES,"", DUE.TYPES, DUE.METHODS, DUE.TYPE.AMTS, DUE.PROPS, DUE.PROP.AMTS, DUE.OUTS)     ;* Routine to Project complete schedules
        SCH.CNT=DCOUNT(DUE.PROPS,FM)
        FOR K=1 TO SCH.CNT
            BB=DUE.PROPS<K>
            LOCATE 'PRINCIPALINT' IN BB<1,1> SETTING PK.POS THEN
                PI.AMT+=DUE.PROP.AMTS<K,PK.POS>
            END
        NEXT K

        BILL.IDS=R.ACD<AA.AD.BILL.ID>
        BIL.CNT=DCOUNT(BILL.IDS,VM)

            FOR I=1 TO BIL.CNT
                READ R.ABD FROM F.ABD,BILL.IDS<1,I> ELSE NULL
                BIL.TYPE=R.ABD<AA.BD.BILL.TYPE>
         IF BIL.TYPE NE 'DISBURSEMENT' THEN
         
                PROP=R.ABD<AA.BD.PROPERTY>
                LOCATE 'ACCOUNT' IN PROP<1,1> SETTING A.POS THEN
                    PR.ORIG.AMT+=R.ABD<AA.BD.OR.PROP.AMOUNT,A.POS>
                    PR.OS.AMT+=R.ABD<AA.BD.OS.PROP.AMOUNT,A.POS>
                END
                LOCATE 'PRINCIPALINT' IN PROP<1,1> SETTING PI.POS THEN
                    PI.ORIG.AMT+=R.ABD<AA.BD.OR.PROP.AMOUNT,PI.POS>
                    PI.OS.AMT+=R.ABD<AA.BD.OS.PROP.AMOUNT,PI.POS>
                END
                LOCATE 'PENALTYINT' IN PROP<1,1> SETTING PE.POS THEN
                    PE.ORIG.AMT+=R.ABD<AA.BD.OR.PROP.AMOUNT,PE.POS>
                    PE.OS.AMT+=R.ABD<AA.BD.OS.PROP.AMOUNT,PE.POS>
                END
		IF R.ABD<AA.BD.OS.TOTAL.AMOUNT> GT 0 THEN
		 OLDEST.DATE<-1>=R.ABD<AA.BD.PAYMENT.DATE>
		END
        END
            NEXT I

		N.DAYS='C'
		OLDEST.DATE=MINIMUM(OLDEST.DATE)
		IF LEN(OLDEST.DATE) EQ 8 THEN
		 CALL CDD('',OLDEST.DATE,Y.DATE,N.DAYS)
                 TOT.DAYS=N.DAYS
		END
        CALL AA.GET.ARRANGEMENT.CONDITIONS(ARR.ID, 'TERM.AMOUNT', '', TODAY, RET.PROP.ID, RET.PROP.REC, ER)
        RET.REC=RAISE(RET.PROP.REC)
        DISB.AMT=RET.REC<AA.AMT.AMOUNT>
        TERM=RET.REC<AA.AMT.TERM>
        AC.ID=R.ARR<AA.ARR.LINKED.APPL.ID>
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'CURACCOUNT',TODAY,CURPR,ERR.1)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'ACCPRINCIPALINT',TODAY,ACCPI,ERR.2)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'ACCPENALTYINT',TODAY,ACCPE,ERR.3)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTCOMMITMENT',TODAY,TOTCOM,ERR.4)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'CURCOMMITMENT',TODAY,CURCOM,ERR.5)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALOVERDUEPR',TODAY,TOTDUEPR,ERR.6)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALDUEIN',TODAY,TOTDUEPI,ERR.7)
        CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALDUEPE',TODAY,TOTDUEPE,ERR.8)
		CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'DUEACCOUNT',TODAY,DUEACC,ERR.9)
		CALL AA.GET.ECB.BALANCE.AMOUNT(AC.ID,'TOTALDEPOSITINT',TODAY,DEPOINT,ERR.10)
		
		READ R.CUS FROM F.CUS,R.ARR<AA.ARR.CUSTOMER> ELSE NULL
		OTHER.DAO=R.CUS<EB.CUS.OTHER.OFFICER>
		DAO=R.CUS<EB.CUS.ACCOUNT.OFFICER>
		R.CUS=''
        CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.ARR<AA.ARR.CO.CODE>,BRANCH.NAME)
	    CALL DBR('ACCOUNT':FM:AC.ACCOUNT.TITLE.1,AC.ID,PROD.NAME)
		CALL DBR('DEPT.ACCT.OFFICER':FM:EB.DAO.NAME,DAO,DAO.NAME)
		CALL DBR('DEPT.ACCT.OFFICER':FM:EB.DAO.NAME,OTHER.DAO,ODAO.NAME)
	    CHANGE ',' TO ' ' IN PROD.NAME
	    CHANGE ',' TO ' ' IN BRANCH.NAME
		CHANGE ',' TO ' ' IN DAO.NAME
		CHANGE ',' TO ' ' IN ODAO.NAME
        IF R.ACD<AA.AD.VALUE.DATE> THEN
        V.DATE=R.ACD<AA.AD.VALUE.DATE>[1,4]:'-':R.ACD<AA.AD.VALUE.DATE>[5,2]:'-':R.ACD<AA.AD.VALUE.DATE>[7,2]
        END ELSE
        V.DATE=''
        END
        IF R.ACD<AA.AD.PAYMENT.START.DATE> THEN
        PAY.ST.DATE=R.ACD<AA.AD.PAYMENT.START.DATE>[1,4]:'-':R.ACD<AA.AD.PAYMENT.START.DATE>[5,2]:'-':R.ACD<AA.AD.PAYMENT.START.DATE>[7,2]
        END ELSE
        PAY.ST.DATE=''
        END
        IF R.ACD<AA.AD.MATURITY.DATE> THEN
        MAT.DATE=R.ACD<AA.AD.MATURITY.DATE>[1,4]:'-':R.ACD<AA.AD.MATURITY.DATE>[5,2]:'-':R.ACD<AA.AD.MATURITY.DATE>[7,2]
        END ELSE
        MAT.DATE=''
        END
        IF R.ARR<AA.ARR.START.DATE> THEN
        ST.DATE=R.ARR<AA.ARR.START.DATE>[1,4]:'-':R.ARR<AA.ARR.START.DATE>[5,2]:'-':R.ARR<AA.ARR.START.DATE>[7,2]
        END ELSE
        ST.DATE=''
        END
		IF R.ACD<AA.AD.LAST.RENEW.DATE> THEN
		RENEW.DATE=R.ACD<AA.AD.LAST.RENEW.DATE>[1,4]:'-':R.ACD<AA.AD.LAST.RENEW.DATE>[5,2]:'-':R.ACD<AA.AD.LAST.RENEW.DATE>[7,2]
		END ELSE
		RENEW.DATE=''
		END
		IF ISDIGIT(TOT.DAYS) THEN 
		FINAL.DAYS=TOT.DAYS 
		END ELSE 
		FINAL.DAYS=''
		END
        OUT.ARR=ARR.ID:DLM:R.ARR<AA.ARR.CUSTOMER>:DLM:R.ARR<AA.ARR.CURRENCY>:DLM:R.ARR<AA.ARR.CO.CODE>:DLM:DQUOTE(BRANCH.NAME):DLM:R.ARR<AA.ARR.ARR.STATUS>
        OUT.ARR:=DLM:ST.DATE:DLM:R.ARR<AA.ARR.LINKED.APPL>:DLM:AC.ID:DLM:R.ARR<AA.ARR.PRODUCT.LINE>:DLM:R.ARR<AA.ARR.PRODUCT.GROUP>:DLM:DQUOTE(PROD.NAME)
        OUT.ARR:=DLM:R.ARR<AA.ARR.ORIG.CONTRACT.DATE>:DLM:V.DATE:DLM:PAY.ST.DATE:DLM:MAT.DATE:DLM:R.ACD<AA.AD.ARR.AGE.STATUS>:DLM:ABS(PR.ORIG.AMT)
		OUT.ARR:=DLM:ABS(PR.OS.AMT):DLM:ABS(PI.ORIG.AMT):DLM:ABS(PI.OS.AMT):DLM:ABS(PE.ORIG.AMT):DLM:ABS(PE.OS.AMT):DLM:ABS(PI.AMT)
        OUT.ARR:=DLM:ABS(CURPR):DLM:ABS(ACCPI):DLM:ABS(ACCPE):DLM:ABS(TOTCOM):DLM:ABS(CURCOM):DLM:ABS(TOTDUEPR):DLM:ABS(TOTDUEPI)
		OUT.ARR:=DLM:ABS(TOTDUEPE):DLM:ABS(TOTDUEPR)+ABS(TOTDUEPI)+ABS(TOTDUEPE):DLM:FINAL.DAYS:DLM:ABS(DISB.AMT):DLM:TERM:DLM:ABS(DUEACC)
		OUT.ARR:=DLM:DAO:DLM:DAO.NAME:DLM:OTHER.DAO:DLM:ODAO.NAME:DLM:ABS(DEPOINT):DLM:RENEW.DATE:DLM:REPORT.DATE:DLM:DB.DATE

        PY.LIST<-1>=OUT.ARR
        CNT=DCOUNT(PY.LIST,@FM)
        IF CNT EQ '80000' THEN
            GOSUB LOAD.DATA
        END
        GOSUB RESET.VAR

    REPEAT
    NEXT Q
    RETURN
LOAD.DATA:
     IF PY.LIST NE "" THEN
	 PY.LIST=TRIM(PY.LIST,',','A')
	 PY.LIST=TRIM(PY.LIST,"'",'A')
	 PY.LIST=TRIM(PY.LIST,"~",'A')
	 CHANGE FM TO ',' IN PY.LIST
     REQUEST=PY.LIST:"~AA"
     CALL EB.CALL.JAVA.API(API.ID,REQUEST,V.RESPONSE,RET.ERR)
    PY.LIST=''
 END
    RETURN
RESET.VAR:
    AC.ID='' ; R.AC=''; ARR.ID='' ; OUT.ARR='' ; CURPR=0 ; ACCPI=0 ; ACCPE=0 ; N.DAYS='' ; DAO='' ; ODAO.NAME=''
    PR.ORIG.AMT=0 ; DISB.AMT=0 ; TOTDUEPE=0 ; CURCOM=0 ; TERM='' ; OVD='' ; PI.AMT=0 ; FINAL.DAYS='' ; RENEW.DATE=''
    RET.PROP.REC='' ; TOTDUEPI=0 ; TOTDUEPR=0 ; TOTCOM=0 ; TOT.CHG=0 ; R.ARR='' ; MAT.DATE='' ; DUEACC=''
    PR.OS.AMT=0 ; PI.ORIG.AMT=0 ; PI.OS.AMT=0 ; PE.ORIG.AMT=0 ; PE.OS.AMT=0 ; OVD.ID='' ; OLDEST.DATE='' ; DEPOINT=''
    DAYS.ARR='' ; CNT='' ; BILL.PAY.DTE='' ; BILL.DTE.CNT='' ; BILL.IDS='' ; R.ABD='' ; TOT.DAYS='' ; OTHER.DAO=''
    R.ACD='' ; SCH.CNT='' ; RET.REC=0 ; BIL.CNT='' ; V.DATE='' ; PAY.ST.DATE='' ; ST.DATE='' ; DAO.NAME=''
    RETURN
END

===================================================================================
STAGING TABLE (45 Parameters)
===================================================================================
CREATE TABLE ARRANGEMENT
(
 ARRANGEMENT_ID VARCHAR(20),
 CUSTOMER VARCHAR(10),
 CURRENCY VARCHAR(5),
 BRANCH VARCHAR(20),
 BRANCH_NAME VARCHAR(100),
 ARR_STATUS VARCHAR(20),
 ARR_START_DATE VARCHAR(20),
 ARR_LINKED_APPL VARCHAR(50),
 LOAN_ACCOUNT VARCHAR(20),
 PRODUCT_LINE VARCHAR(50),
 PRODUCT_GROUP VARCHAR(50),
 PRODUCT VARCHAR(50),
 ORIG_CONTRACT_DATE VARCHAR(20),
 VALUE_DATE VARCHAR(20),
 PAYMENT_START_DATE VARCHAR(20),
 MATURITY_DATE VARCHAR(20),
 ARR_AGE_STATUS VARCHAR(20),
 PR_ORIG_AMT VARCHAR(20),
 PR_OS_AMT VARCHAR(20),
 PI_ORIG_AMT VARCHAR(20),
 PI_OS_AMT VARCHAR(20),
 PE_ORIG_AMT VARCHAR(20),
 PE_OS_AMT VARCHAR(20), 
 CURRENT_PRINCIPALINT VARCHAR(20),
 CURRENT_PRINCIPAL VARCHAR(20),
 ACCRUED_PRINCIPALINT VARCHAR(20),
 ACCRUED_PENALTYINT VARCHAR(20),
 TOTALCOMMITMENT VARCHAR(20),
 CURCOMMITMENT VARCHAR(20),
 TOTALDUE_PRINCIPAL VARCHAR(20),
 TOTALDUE_PRINCIPALINT VARCHAR(20),
 TOTALDUE_PENALTYINT VARCHAR(20),
 TOTALDUE VARCHAR(20),
 OVERDUE_DAYS VARCHAR(10),
 DISBURSED_AMOUNT VARCHAR(20),
 TERM VARCHAR(5),
 DUE_PRINCIPAL VARCHAR(20),
 ACCOUNT_OFFCICER VARCHAR(10),
 OFFICER_NAME VARCHAR(100),
 OTHER_OFFICER VARCHAR(10),
 OTHER_NAME VARCHAR(100),
 DEPOSITINT VARCHAR(20),
 RENEW_DATE VARCHAR(20),
 REPORT_DATE VARCHAR(20),
 DB_DATE VARCHAR(20)
)
GO
==================================================================
DW TABLES
==================================================================
CREATE TABLE DimARRANGEMENT
(
 AADWKEY INT IDENTITY PRIMARY KEY,
 ARRANGEMENT_ID VARCHAR(20),
 CUSTOMER VARCHAR(10),
 CURRENCY VARCHAR(5),
 BRANCH VARCHAR(20),
 BRANCH_NAME VARCHAR(100),
 ARR_STATUS VARCHAR(20),
 ARR_LINKED_APPL VARCHAR(50),
 LOAN_ACCOUNT VARCHAR(20),
 PRODUCT_LINE VARCHAR(50),
 PRODUCT_GROUP VARCHAR(50),
 PRODUCT VARCHAR(50),
 ARR_AGE_STATUS VARCHAR(20),
 TERM VARCHAR(5),
 ACCOUNT_OFFCICER VARCHAR(10),
 OFFICER_NAME VARCHAR(100),
 OTHER_OFFICER VARCHAR(10),
 OTHER_NAME VARCHAR(100),
 RENEW_DATE VARCHAR(20),
 CURRENT_FLAG BIT DEFAULT 1
)
GO

CREATE TABLE FactARRANGEMENT
(
 AADWKEY INT FOREIGN KEY REFERENCES DimARRANGEMENT(AADWKEY),
 CUSTOMERDWKEY INT FOREIGN KEY REFERENCES DimCUSTOMER(CUSTOMERDWKEY),
 PR_ORIG_AMT MONEY,
 PR_OS_AMT MONEY,
 PI_ORIG_AMT MONEY,
 PI_OS_AMT MONEY,
 PE_ORIG_AMT MONEY,
 PE_OS_AMT MONEY,
 CURRENT_PRINCIPALINT MONEY,
 CURRENT_PRINCIPAL MONEY,
 ACCRUED_PRINCIPALINT MONEY,
 ACCRUED_PENALTYINT MONEY,
 TOTALCOMMITMENT MONEY,
 CURCOMMITMENT MONEY,
 TOTALDUE_PRINCIPAL MONEY,
 TOTALDUE_PRINCIPALINT MONEY,
 TOTALDUE_PENALTYINT MONEY,
 TOTALDUE MONEY,
 OVERDUE_DAYS INT,
 DISBURSED_AMOUNT MONEY,
 DUE_PRINCIPAL MONEY,
 DEPOSITINT MONEY,
 ARR_START_DATE DATE,
 ORIG_CONTRACT_DATE DATE,
 VALUE_DATE DATE,
 PAYMENT_START_DATE DATE,
 MATURITY_DATE DATE,
 REPORT_DATE DATE,
 DB_DATE DATE
)
GO
ALTER TABLE FactARRANGEMENT
REBUILD WITH (DATA_COMPRESSION=PAGE)
GO
CREATE CLUSTERED INDEX IDX_FactARRANGEMENT_REPORT_DATE ON FactARRANGEMENT(REPORT_DATE)
CREATE NONCLUSTERED INDEX IDX_FactARRANGEMENT_AADWKEY ON FactARRANGEMENT(AADWKEY)
GO
==================================================================
STORED PROCEDURE DB2 (45 Parameters)
==================================================================
CREATE PROCEDURE spARRANGEMENT
(
IN pARRANGEMENT_ID VARCHAR(20),IN pCUSTOMER VARCHAR(10),IN pCURRENCY VARCHAR(5),IN pBRANCH VARCHAR(20),
IN pBRANCH_NAME VARCHAR(100),IN pARR_STATUS VARCHAR(20),IN pARR_START_DATE VARCHAR(20),IN pARR_LINKED_APPL VARCHAR(50),
IN pLOAN_ACCOUNT VARCHAR(20),IN pPRODUCT_LINE VARCHAR(50),IN pPRODUCT_GROUP VARCHAR(50),IN pPRODUCT VARCHAR(50),
IN pORIG_CONTRACT_DATE VARCHAR(20),IN pVALUE_DATE VARCHAR(20),IN pPAYMENT_START_DATE VARCHAR(20),
IN pMATURITY_DATE VARCHAR(20),IN pARR_AGE_STATUS VARCHAR(20),IN pPR_ORIG_AMT VARCHAR(20),IN pPR_OS_AMT VARCHAR(20),
IN pPI_ORIG_AMT VARCHAR(20),IN pPI_OS_AMT VARCHAR(20),IN pPE_ORIG_AMT VARCHAR(20),IN pPE_OS_AMT VARCHAR(20), 
IN pCURRENT_PRINCIPALINT VARCHAR(20),IN pCURRENT_PRINCIPAL VARCHAR(20),IN pACCRUED_PRINCIPALINT VARCHAR(20),
IN pACCRUED_PENALTYINT VARCHAR(20),IN pTOTALCOMMITMENT VARCHAR(20),IN pCURCOMMITMENT VARCHAR(20),IN pTOTALDUE_PRINCIPAL VARCHAR(20),
IN pTOTALDUE_PRINCIPALINT VARCHAR(20),IN pTOTALDUE_PENALTYINT VARCHAR(20),IN pTOTALDUE VARCHAR(20),IN pOVERDUE_DAYS VARCHAR(10),IN pDISBURSED_AMOUNT VARCHAR(20),
IN pTERM VARCHAR(5),IN pDUE_PRINCIPAL VARCHAR(20),IN pACCOUNT_OFFCICER VARCHAR(10),IN pOFFICER_NAME VARCHAR(100),IN pOTHER_OFFICER VARCHAR(10),
IN pOTHER_NAME VARCHAR(100),IN pDEPOSITINT VARCHAR(20),IN pRENEW_DATE VARCHAR(20),IN pREPORT_DATE VARCHAR(20),IN pDB_DATE VARCHAR(20)
)
LANGUAGE SQL
BEGIN
INSERT INTO ARRANGEMENT
(
 ARRANGEMENT_ID,CUSTOMER,CURRENCY,BRANCH,BRANCH_NAME,ARR_STATUS,ARR_START_DATE,ARR_LINKED_APPL,
 LOAN_ACCOUNT,PRODUCT_LINE,PRODUCT_GROUP,PRODUCT,ORIG_CONTRACT_DATE,VALUE_DATE,
 PAYMENT_START_DATE,MATURITY_DATE,ARR_AGE_STATUS,PR_ORIG_AMT,PR_OS_AMT,PI_ORIG_AMT,PI_OS_AMT,
 PE_ORIG_AMT,PE_OS_AMT,CURRENT_PRINCIPALINT,CURRENT_PRINCIPAL,ACCRUED_PRINCIPALINT,ACCRUED_PENALTYINT,
 TOTALCOMMITMENT,CURCOMMITMENT,TOTALDUE_PRINCIPAL,TOTALDUE_PRINCIPALINT,TOTALDUE_PENALTYINT,TOTALDUE,
 OVERDUE_DAYS,DISBURSED_AMOUNT,TERM,DUE_PRINCIPAL,ACCOUNT_OFFCICER,OFFICER_NAME,
 OTHER_OFFICER,OTHER_NAME,DEPOSITINT,RENEW_DATE,REPORT_DATE,DB_DATE
)
VALUES
(
 pARRANGEMENT_ID,pCUSTOMER,pCURRENCY,pBRANCH,pBRANCH_NAME,pARR_STATUS,pARR_START_DATE,pARR_LINKED_APPL,pLOAN_ACCOUNT,
 pPRODUCT_LINE,pPRODUCT_GROUP,pPRODUCT,pORIG_CONTRACT_DATE,pVALUE_DATE,pPAYMENT_START_DATE,pMATURITY_DATE,
 pARR_AGE_STATUS,pPR_ORIG_AMT,pPR_OS_AMT,pPI_ORIG_AMT,pPI_OS_AMT,pPE_ORIG_AMT,pPE_OS_AMT,pCURRENT_PRINCIPALINT,pCURRENT_PRINCIPAL,
 pACCRUED_PRINCIPALINT,pACCRUED_PENALTYINT,pTOTALCOMMITMENT,pCURCOMMITMENT,pTOTALDUE_PRINCIPAL,pTOTALDUE_PRINCIPALINT,
 pTOTALDUE_PENALTYINT,pTOTALDUE,pOVERDUE_DAYS,pDISBURSED_AMOUNT,pTERM,pDUE_PRINCIPAL,pACCOUNT_OFFCICER,
 pOFFICER_NAME,pOTHER_OFFICER,pOTHER_NAME,pDEPOSITINT,pRENEW_DATE,pREPORT_DATE,pDB_DATE
);
END
==================================================================
STORED PROCEDURE MS SQL SERVER (45 Parameters)
==================================================================
CREATE PROCEDURE spARRANGEMENT
        (
        @pARRANGEMENT_ID VARCHAR(20),@pCUSTOMER VARCHAR(10),@pCURRENCY VARCHAR(5),@pBRANCH VARCHAR(20),
        @pBRANCH_NAME VARCHAR(100),@pARR_STATUS VARCHAR(20),@pARR_START_DATE VARCHAR(20),@pARR_LINKED_APPL VARCHAR(50),
        @pLOAN_ACCOUNT VARCHAR(20),@pPRODUCT_LINE VARCHAR(50),@pPRODUCT_GROUP VARCHAR(50),
        @pPRODUCT VARCHAR(50),@pORIG_CONTRACT_DATE VARCHAR(20),@pVALUE_DATE VARCHAR(20),@pPAYMENT_START_DATE VARCHAR(20),
        @pMATURITY_DATE VARCHAR(20),@pARR_AGE_STATUS VARCHAR(20),@pPR_ORIG_AMT VARCHAR(20),@pPR_OS_AMT VARCHAR(20),
        @pPI_ORIG_AMT VARCHAR(20),@pPI_OS_AMT VARCHAR(20),@pPE_ORIG_AMT VARCHAR(20),@pPE_OS_AMT VARCHAR(20), 
        @pCURRENT_PRINCIPALINT VARCHAR(20),@pCURRENT_PRINCIPAL VARCHAR(20),@pACCRUED_PRINCIPALINT VARCHAR(20),
        @pACCRUED_PENALTYINT VARCHAR(20),@pTOTALCOMMITMENT VARCHAR(20),@pCURCOMMITMENT VARCHAR(20),@pTOTALDUE_PRINCIPAL VARCHAR(20),
        @pTOTALDUE_PRINCIPALINT VARCHAR(20),@pTOTALDUE_PENALTYINT VARCHAR(20),@pTOTALDUE VARCHAR(20),@pOVERDUE_DAYS VARCHAR(10),@pDISBURSED_AMOUNT VARCHAR(20),
        @pTERM VARCHAR(5),@pDUE_PRINCIPAL VARCHAR(20),@pACCOUNT_OFFCICER VARCHAR(10),@pOFFICER_NAME VARCHAR(100),@pOTHER_OFFICER VARCHAR(10),
        @pOTHER_NAME VARCHAR(100),@pDEPOSITINT VARCHAR(20),@pRENEW_DATE VARCHAR(20),@pREPORT_DATE VARCHAR(20),@pDB_DATE VARCHAR(20)
        )
AS
BEGIN
INSERT INTO ARRANGEMENT
        (
         ARRANGEMENT_ID,CUSTOMER,CURRENCY,BRANCH,BRANCH_NAME,ARR_STATUS,ARR_START_DATE,ARR_LINKED_APPL,
         LOAN_ACCOUNT,PRODUCT_LINE,PRODUCT_GROUP,PRODUCT,ORIG_CONTRACT_DATE,VALUE_DATE,
         PAYMENT_START_DATE,MATURITY_DATE,ARR_AGE_STATUS,PR_ORIG_AMT,PR_OS_AMT,PI_ORIG_AMT,PI_OS_AMT,
         PE_ORIG_AMT,PE_OS_AMT,CURRENT_PRINCIPALINT,CURRENT_PRINCIPAL,ACCRUED_PRINCIPALINT,ACCRUED_PENALTYINT,
         TOTALCOMMITMENT,CURCOMMITMENT,TOTALDUE_PRINCIPAL,TOTALDUE_PRINCIPALINT,TOTALDUE_PENALTYINT,TOTALDUE,
         OVERDUE_DAYS,DISBURSED_AMOUNT,TERM,DUE_PRINCIPAL,ACCOUNT_OFFCICER,OFFICER_NAME,OTHER_OFFICER,
         OTHER_NAME,DEPOSITINT,RENEW_DATE,REPORT_DATE,DB_DATE
        )
VALUES(@pARRANGEMENT_ID,@pCUSTOMER,@pCURRENCY,@pBRANCH,@pBRANCH_NAME,@pARR_STATUS,@pARR_START_DATE,@pARR_LINKED_APPL,@pLOAN_ACCOUNT,
       @pPRODUCT_LINE,@pPRODUCT_GROUP,@pPRODUCT,@pORIG_CONTRACT_DATE,@pVALUE_DATE,@pPAYMENT_START_DATE,@pMATURITY_DATE,
       @pARR_AGE_STATUS,@pPR_ORIG_AMT,@pPR_OS_AMT,@pPI_ORIG_AMT,@pPI_OS_AMT,@pPE_ORIG_AMT,@pPE_OS_AMT,@pCURRENT_PRINCIPALINT,@pCURRENT_PRINCIPAL,
       @pACCRUED_PRINCIPALINT,@pACCRUED_PENALTYINT,@pTOTALCOMMITMENT,@pCURCOMMITMENT,@pTOTALDUE_PRINCIPAL,@pTOTALDUE_PRINCIPALINT,
       @pTOTALDUE_PENALTYINT,@pTOTALDUE,@pOVERDUE_DAYS,@pDISBURSED_AMOUNT,@pTERM,@pDUE_PRINCIPAL,@pACCOUNT_OFFCICER,@pOFFICER_NAME,
       @pOTHER_OFFICER,@pOTHER_NAME,@pDEPOSITINT,@pRENEW_DATE,@pREPORT_DATE,@pDB_DATE
      )
END