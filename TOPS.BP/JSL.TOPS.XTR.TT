SUBROUTINE JSL.TOPS.XTR.TT

*============================================
* Title: BI Teller Data Extraction
* Initial Author: Yisau Ramon ; For Tops Analytics
* Updated by : Yisau Ramon ; To handle multiple transactions in a single TT capturing.
* Updated Date : 7th Sept 2018
* Date: 1st May 2018
*============================================

$INSERT I_COMMON
$INSERT I_EQUATE
$INSERT I_F.TELLER
$INSERT I_F.DATES
$INSERT I_F.COMPANY
$INSERT I_F.TELLER.ID
$INSERT I_F.INTERCO.PARAMETER

GOSUB INIT
GOSUB PROCESS
RETURN

INIT:
	FN.INTERCO='F.INTERCO.PARAMETER'
	F.INTERCO=''
	CALL OPF(FN.INTERCO,F.INTERCO)
   LWORK.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY)
   DB.DATE=TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2] ; OUT.ARR='' ; R.TT='' ; PY.LIST='' ; DLM='|' ; TT.ID='' ; BRANCH.NAME=''
   REPORT.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY)[1,4]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[5,2]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[7,2]
   	SYS.ID='SYSTEM' ; API.ID='JSL.TOPS.API' ; V.RESPONSE='' ; RET.ERR=''
	READ R.INTERCO FROM F.INTERCO,SYS.ID ELSE NULL
	MNE.LIST=R.INTERCO<ST.ICP.FIN.MNEMONIC>
RETURN

PROCESS:
   MNE.CNT=DCOUNT(MNE.LIST,@VM)
   FOR J=1 TO MNE.CNT
      MNE=MNE.LIST<1,J>
   FN.TT='F':MNE:'.TELLER$HIS'
   F.TT=''
   CALL OPF(FN.TT,F.TT)
   FN.TID='F':MNE:'.TELLER.ID'
   F.TID=''
   CALL OPF(FN.TID,F.TID)
   TT.CMD='SELECT ':FN.TT:' WITH VALUE.DATE.1 EQ ':LWORK.DATE
   CALL EB.READLIST(TT.CMD,TT.LIST,'','','')
   LOOP
   REMOVE TT.ID FROM TT.LIST SETTING TT.POS
        IF TT.POS=0 THEN GOSUB LOAD.DATA
   WHILE TT.ID:TT.POS
   CALL F.READ(FN.TT,TT.ID,R.TT,F.TT,TT.ERR)
   CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.TT<TT.TE.CO.CODE>,BRANCH.NAME)
   CALL F.READ(FN.TID,R.TT<TT.TE.TELLER.ID.1>,R.TID,F.TID,TID.ERR)
   IF R.TT<TT.TE.EXPOSURE.DATE.1> THEN
   EX.DATE=R.TT<TT.TE.EXPOSURE.DATE.1>[1,4]:'-':R.TT<TT.TE.EXPOSURE.DATE.1>[5,2]:'-':R.TT<TT.TE.EXPOSURE.DATE.1>[7,2]
   END ELSE
   EX.DATE=REPORT.DATE
   END
   V.DATE1=R.TT<TT.TE.VALUE.DATE.1>[1,4]:'-':R.TT<TT.TE.VALUE.DATE.1>[5,2]:'-':R.TT<TT.TE.VALUE.DATE.1>[7,2]
   V.DATE2=R.TT<TT.TE.VALUE.DATE.2>[1,4]:'-':R.TT<TT.TE.VALUE.DATE.2>[5,2]:'-':R.TT<TT.TE.VALUE.DATE.2>[7,2]
   MV.CNT=DCOUNT(R.TT<TT.TE.ACCOUNT.1>,VM)
   IF MV.CNT>1 THEN
     GOSUB NORMALIZE
   END ELSE
   OUT.ARR=TT.ID:DLM:R.TT<TT.TE.TELLER.ID.1>:DLM:R.TT<TT.TE.DR.CR.MARKER>:DLM:R.TT<TT.TE.CURRENCY.1>:DLM:R.TT<TT.TE.ACCOUNT.1>
   OUT.ARR:=DLM:R.TT<TT.TE.CUSTOMER.1>:DLM:R.TT<TT.TE.AMOUNT.LOCAL.1>:DLM:R.TT<TT.TE.AMOUNT.FCY.1>:DLM:V.DATE1
   OUT.ARR:=DLM:EX.DATE:DLM:R.TT<TT.TE.NARRATIVE.1>:DLM:R.TT<TT.TE.CURRENCY.2>:DLM:R.TT<TT.TE.TELLER.ID.2>
   OUT.ARR:=DLM:R.TT<TT.TE.ACCOUNT.2>:DLM:R.TT<TT.TE.CUSTOMER.2>:DLM:R.TT<TT.TE.AMOUNT.LOCAL.2>:DLM:R.TT<TT.TE.AMOUNT.FCY.2>
   OUT.ARR:=DLM:R.TT<TT.TE.NET.AMOUNT>:DLM:V.DATE2:DLM:R.TT<TT.TE.CHEQUE.NUMBER>:DLM:R.TT<TT.TE.CHRG.AMT.LOCAL>
   OUT.ARR:=DLM:R.TT<TT.TE.CHRG.AMT.FCCY>:DLM:R.TID<TT.TID.USER>:DLM:R.TT<TT.TE.TRANSACTION.CODE>:DLM:R.TT<TT.TE.CO.CODE>:DLM:DQUOTE(BRANCH.NAME):DLM:REPORT.DATE:DLM:DB.DATE
   END
   	PY.LIST<-1>=OUT.ARR
        CNT=DCOUNT(PY.LIST,@FM)
        IF CNT GE '20000' THEN
            GOSUB LOAD.DATA
        END
        TT.ID='' ; R.TT=''; OUT.ARR='' ; BRANCH.NAME='' ; V.DATE1='' ; V.DATE2='' ; EX.DATE='' ; MV.CNT=''
	REPEAT
        NEXT J
RETURN
LOAD.DATA:
     IF PY.LIST NE '' THEN
     PY.LIST=TRIM(PY.LIST,',','A')
     PY.LIST=TRIM(PY.LIST,"'",'A')
     PY.LIST=TRIM(PY.LIST,"~",'A')
     CHANGE FM TO ',' IN PY.LIST
     REQUEST=PY.LIST:"~TT"
     CALL EB.CALL.JAVA.API(API.ID,REQUEST,V.RESPONSE,RET.ERR)
     PY.LIST=''
     END
    RETURN
NORMALIZE:
      FOR W=1 TO MV.CNT
	        OUT.ARR<-1>=TT.ID:DLM:R.TT<TT.TE.TELLER.ID.1>:DLM:R.TT<TT.TE.DR.CR.MARKER>:DLM:R.TT<TT.TE.CURRENCY.1>:DLM:R.TT<TT.TE.ACCOUNT.1,W>
            OUT.ARR:=DLM:R.TT<TT.TE.CUSTOMER.1>:DLM:R.TT<TT.TE.AMOUNT.LOCAL.1,W>:DLM:R.TT<TT.TE.AMOUNT.FCY.1,W>:DLM:V.DATE1
            OUT.ARR:=DLM:EX.DATE:DLM:R.TT<TT.TE.NARRATIVE.1,W>:DLM:R.TT<TT.TE.CURRENCY.2>:DLM:R.TT<TT.TE.TELLER.ID.2>
            OUT.ARR:=DLM:R.TT<TT.TE.ACCOUNT.2>:DLM:R.TT<TT.TE.CUSTOMER.2>:DLM:R.TT<TT.TE.AMOUNT.LOCAL.2>:DLM:R.TT<TT.TE.AMOUNT.FCY.2>
            OUT.ARR:=DLM:R.TT<TT.TE.NET.AMOUNT>:DLM:V.DATE2:DLM:R.TT<TT.TE.CHEQUE.NUMBER>:DLM:R.TT<TT.TE.CHRG.AMT.LOCAL>
            OUT.ARR:=DLM:R.TT<TT.TE.CHRG.AMT.FCCY>:DLM:R.TID<TT.TID.USER>:DLM:R.TT<TT.TE.TRANSACTION.CODE>:DLM:R.TT<TT.TE.CO.CODE>:DLM:DQUOTE(BRANCH.NAME):DLM:REPORT.DATE:DLM:DB.DATE 
	  NEXT W

RETURN
END

=============================================================================
STAGING TABLE
=============================================================================
CREATE TABLE TELLER
(
 TTID VARCHAR(20),
 TELLER_ID1 VARCHAR(5),
 DRCR_MARKER VARCHAR(10),
 CURRENCY1 VARCHAR(5),
 ACCOUNT1 VARCHAR(20),
 CUSTOMER1 VARCHAR(10),
 AMOUNT_LOCAL1 VARCHAR(20),
 AMOUNT_FCY1 VARCHAR(20),
 VALUE_DATE1 VARCHAR(20),
 EXPOSURE_DATE1 VARCHAR(20),
 NARRATIVE1 VARCHAR(100),
 CURRENCY2 VARCHAR(5),
 TELLER_ID2 VARCHAR(5),
 ACCOUNT2 VARCHAR(20),
 CUSTOMER2 VARCHAR(10),
 AMOUNT_LOCAL2 VARCHAR(20),
 AMOUNT_FCY2 VARCHAR(5),
 NET_AMOUNT VARCHAR(20),
 VALUE_DATE2 VARCHAR(20),
 CHEQUE_NUMBER VARCHAR(20),
 CHRG_AMT_LOCAL VARCHAR(20),
 CHRG_AMT_FCCY VARCHAR(20),
 TT_USER VARCHAR(50),
 TRANSACTION_CODE VARCHAR(5),
 BRANCH VARCHAR(20),
 BRANCH_NAME VARCHAR(100),
 REPORT_DATE VARCHAR(20),
 DB_DATE VARCHAR(20)
)

=============================================================================
STORED PROCEDURE DB2 (28 Parameters)
=============================================================================
CREATE PROCEDURE spTELLER
(
IN pTTID VARCHAR(20),IN pTELLER_ID1 VARCHAR(5),IN pDRCR_MARKER VARCHAR(10),IN pCURRENCY1 VARCHAR(5),
IN pACCOUNT1 VARCHAR(20),IN pCUSTOMER1 VARCHAR(10),IN pAMOUNT_LOCAL1 VARCHAR(20),IN pAMOUNT_FCY1 VARCHAR(20),
IN pVALUE_DATE1 VARCHAR(20),IN pEXPOSURE_DATE1 VARCHAR(20),IN pNARRATIVE1 VARCHAR(100),IN pCURRENCY2 VARCHAR(5),
IN pTELLER_ID2 VARCHAR(5),IN pACCOUNT2 VARCHAR(20),IN pCUSTOMER2 VARCHAR(10),IN pAMOUNT_LOCAL2 VARCHAR(20),
IN pAMOUNT_FCY2 VARCHAR(5),IN pNET_AMOUNT VARCHAR(20),IN pVALUE_DATE2 VARCHAR(20),IN pCHEQUE_NUMBER VARCHAR(20),
IN pCHRG_AMT_LOCAL VARCHAR(20),IN pCHRG_AMT_FCCY VARCHAR(20),IN pTT_USER VARCHAR(50),IN pTRANSACTION_CODE VARCHAR(5),
IN pBRANCH VARCHAR(20),IN pBRANCH_NAME VARCHAR(100),IN pREPORT_DATE VARCHAR(20),IN pDB_DATE VARCHAR(20)
)
LANGUAGE SQL
BEGIN
  INSERT INTO TELLER
  (
 TTID, TELLER_ID1,DRCR_MARKER,CURRENCY1,ACCOUNT1,CUSTOMER1,AMOUNT_LOCAL1,AMOUNT_FCY1,
 VALUE_DATE1,EXPOSURE_DATE1,NARRATIVE1,CURRENCY2,TELLER_ID2,ACCOUNT2,CUSTOMER2,
 AMOUNT_LOCAL2,AMOUNT_FCY2,NET_AMOUNT,VALUE_DATE2,CHEQUE_NUMBER,CHRG_AMT_LOCAL,CHRG_AMT_FCCY,
 TT_USER,TRANSACTION_CODE,BRANCH,BRANCH_NAME,REPORT_DATE,DB_DATE
)
VALUES
  (
 pTTID,pTELLER_ID1,pDRCR_MARKER,pCURRENCY1,pACCOUNT1,pCUSTOMER1,pAMOUNT_LOCAL1,pAMOUNT_FCY1,
 pVALUE_DATE1,pEXPOSURE_DATE1,pNARRATIVE1,pCURRENCY2,pTELLER_ID2,pACCOUNT2,pCUSTOMER2,pAMOUNT_LOCAL2,
 pAMOUNT_FCY2,pNET_AMOUNT,pVALUE_DATE2,pCHEQUE_NUMBER,pCHRG_AMT_LOCAL,pCHRG_AMT_FCCY,pTT_USER,
 pTRANSACTION_CODE,pBRANCH,pBRANCH_NAME,pREPORT_DATE,pDB_DATE
);
END

=============================================================================
STORED PROCEDURE SQL SERVER (28 Parameters)
=============================================================================
CREATE PROCEDURE spTELLER
(
@pTTID VARCHAR(20),@pTELLER_ID1 VARCHAR(5),@pDRCR_MARKER VARCHAR(10),@pCURRENCY1 VARCHAR(5),
@pACCOUNT1 VARCHAR(20),@pCUSTOMER1 VARCHAR(10),@pAMOUNT_LOCAL1 VARCHAR(20),@pAMOUNT_FCY1 VARCHAR(20),
@pVALUE_DATE1 VARCHAR(20),@pEXPOSURE_DATE1 VARCHAR(20),@pNARRATIVE1 VARCHAR(100),@pCURRENCY2 VARCHAR(5),
@pTELLER_ID2 VARCHAR(5),@pACCOUNT2 VARCHAR(20),@pCUSTOMER2 VARCHAR(10),@pAMOUNT_LOCAL2 VARCHAR(20),
@pAMOUNT_FCY2 VARCHAR(5),@pNET_AMOUNT VARCHAR(20),@pVALUE_DATE2 VARCHAR(20),@pCHEQUE_NUMBER VARCHAR(20),
@pCHRG_AMT_LOCAL VARCHAR(20),@pCHRG_AMT_FCCY VARCHAR(20),@pTT_USER VARCHAR(50),@pTRANSACTION_CODE VARCHAR(5),
@pBRANCH VARCHAR(20),@pBRANCH_NAME VARCHAR(100),@pREPORT_DATE VARCHAR(20),@pDB_DATE VARCHAR(20)
)
AS
BEGIN
  INSERT INTO TELLER
  (
 TTID, TELLER_ID1,DRCR_MARKER,CURRENCY1,ACCOUNT1,CUSTOMER1,AMOUNT_LOCAL1,AMOUNT_FCY1,
 VALUE_DATE1,EXPOSURE_DATE1,NARRATIVE1,CURRENCY2,TELLER_ID2,ACCOUNT2,CUSTOMER2,
 AMOUNT_LOCAL2,AMOUNT_FCY2,NET_AMOUNT,VALUE_DATE2,CHEQUE_NUMBER,CHRG_AMT_LOCAL,CHRG_AMT_FCCY,
 TT_USER,TRANSACTION_CODE,BRANCH,BRANCH_NAME,REPORT_DATE,DB_DATE
)
VALUES
  (
 @pTTID,@pTELLER_ID1,@pDRCR_MARKER,@pCURRENCY1,@pACCOUNT1,@pCUSTOMER1,@pAMOUNT_LOCAL1,@pAMOUNT_FCY1,
 @pVALUE_DATE1,@pEXPOSURE_DATE1,@pNARRATIVE1,@pCURRENCY2,@pTELLER_ID2,@pACCOUNT2,@pCUSTOMER2,@pAMOUNT_LOCAL2,
 @pAMOUNT_FCY2,@pNET_AMOUNT,@pVALUE_DATE2,@pCHEQUE_NUMBER,@pCHRG_AMT_LOCAL,@pCHRG_AMT_FCCY,@pTT_USER,
 @pTRANSACTION_CODE,@pBRANCH,@pBRANCH_NAME,@pREPORT_DATE,@pDB_DATE
)
END