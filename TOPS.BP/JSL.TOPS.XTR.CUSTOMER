    SUBROUTINE JSL.TOPS.XTR.CUSTOMER

*============================================
* Title: BI Customer Data Extraction
* Initial Author: Yisau Ramon ; For Tops Analytics
* Date: 1st May 2018
*============================================

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.CUSTOMER
    $INSERT I_F.SECTOR
    $INSERT I_F.INDUSTRY
    $INSERT I_F.DATES
    $INSERT I_F.DEPT.ACCT.OFFICER
    $INSERT I_F.LANGUAGE
    $INSERT I_F.COMPANY
    $INSERT I_F.CUSTOMER.STATUS
	
    GOSUB INIT
    GOSUB PROCESS
    RETURN

INIT:
    FN.SEC='F.SECTOR'
    F.SEC=''
    CALL OPF(FN.SEC,F.SEC)
	
    FN.IND='F.INDUSTRY'
    F.IND=''
    CALL OPF(FN.IND,F.IND)
	
    FN.CUS='F.CUSTOMER'
    F.CUS=''
	CALL OPF(FN.CUS,F.CUS)
	
	CALL GET.LOC.REF('CUSTOMER','OPENING.DATE',OD.POS) ; CALL GET.LOC.REF('CUSTOMER','CUST.TYPE',CT.POS)
	CALL GET.LOC.REF('CUSTOMER','ACCOM.TYPE',AM.POS) ; CALL GET.LOC.REF('CUSTOMER','AGE',AGE.POS)
	CALL GET.LOC.REF('CUSTOMER','CONTACT.NAME',CN.POS) ; CALL GET.LOC.REF('CUSTOMER','CURR.ADDRESS',CA.POS)
	CALL GET.LOC.REF('CUSTOMER','EMPLOY.STATUS',ES.POS) ; CALL GET.LOC.REF('CUSTOMER','CLASSIFICATION',CL.POS)
	CALL GET.LOC.REF('CUSTOMER','SALARY.RANGE',SR.POS) ; CALL GET.LOC.REF('CUSTOMER','PROFESSION',PR.POS)
	CALL GET.LOC.REF('CUSTOMER','CORRESPOND.NAME',CR.POS) ; CALL GET.LOC.REF('CUSTOMER','ID.TYPES',ID.POS)
	CALL GET.LOC.REF('CUSTOMER','INITIALS',IN.POS) ; CALL GET.LOC.REF('CUSTOMER','SUBURB.TOWN',SU.POS)
	CALL GET.LOC.REF('CUSTOMER','CITY.MUNICIPAL',CM.POS) ; CALL GET.LOC.REF('CUSTOMER','PROVINCE.STATE',PS.POS)
	CALL GET.LOC.REF('CUSTOMER','PO.BOX.NO',PB.POS) ; CALL GET.LOC.REF('CUSTOMER','PO.SUBURB.TOWN',PT.POS)
	CALL GET.LOC.REF('CUSTOMER','PO.CITY.MUNICIPAL',PM.POS) ; CALL GET.LOC.REF('CUSTOMER','PO.PROV.STATE',PV.POS)
	CALL GET.LOC.REF('CUSTOMER','TEL.MOBILE',TM.POS) ; CALL GET.LOC.REF('CUSTOMER','TAX.REG.NO',TN.POS)
	CALL GET.LOC.REF('CUSTOMER','GROUP',GR.POS) ; CALL GET.LOC.REF('CUSTOMER','GROUP.TYPE',GT.POS)
	CALL GET.LOC.REF('CUSTOMER','G.MEMBER.STATUS',MS.POS) ; CALL GET.LOC.REF('CUSTOMER','RURAL.URBAN',RU.POS) 
	CALL GET.LOC.REF('CUSTOMER','ALTSECTOR',AS.POS) ; CALL GET.LOC.REF('CUSTOMER','ALTINDUSTRY',AI.POS)
	CALL GET.LOC.REF('CUSTOMER','FATHER.NAME',FN.POS) ; CALL GET.LOC.REF('CUSTOMER','MOTHER.NAME',MN.POS)
	
    DLM='|' ; OUT.ARR='' ; CUS.ID='' ; SEC.DESC='' ; IND.DESC='' ; R.CUS='' ; DOB=''
    REPORT.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY)[1,4]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[5,2]:'-':R.DATES(EB.DAT.LAST.WORKING.DAY)[7,2]
    DB.DATE=TODAY[1,4]:'-':TODAY[5,2]:'-':TODAY[7,2] ; API.ID='JSL.TOPS.API' ; V.RESPONSE='' ; RET.ERR=''
	*NEW.DATE=R.DATES(EB.DAT.LAST.WORKING.DAY)[3,6]:'...'
    RETURN

PROCESS:
    CUS.CMD='SELECT ':FN.CUS
    CALL EB.READLIST(CUS.CMD,CUS.LIST,'','','')
    LOOP
        REMOVE CUS.ID FROM CUS.LIST SETTING CU.POS
        IF CU.POS=0 THEN GOSUB LOAD.DATA
    WHILE CUS.ID:CU.POS
        CALL F.READ(FN.CUS,CUS.ID,R.CUS,F.CUS,CUS.ERR)
        SNAME=R.CUS<EB.CUS.SHORT.NAME> ; FNAME=R.CUS<EB.CUS.NAME.1> ; LNAME=R.CUS<EB.CUS.NAME.2>
		CUS.ST=R.CUS<EB.CUS.CUSTOMER.STATUS> ; ST=R.CUS<EB.CUS.STREET> ; LG.DOC=R.CUS<EB.CUS.LEGAL.ID.DOC.NAME>
		O.D=R.CUS<EB.CUS.LOCAL.REF,OD.POS> ; C.T=R.CUS<EB.CUS.LOCAL.REF,CT.POS> ; A.M=R.CUS<EB.CUS.LOCAL.REF,AM.POS>
		AGE=R.CUS<EB.CUS.LOCAL.REF,AGE.POS> ; C.N=R.CUS<EB.CUS.LOCAL.REF,CN.POS> ; C.A=R.CUS<EB.CUS.LOCAL.REF,CA.POS>
		E.S=R.CUS<EB.CUS.LOCAL.REF,ES.POS> ; C.L=R.CUS<EB.CUS.LOCAL.REF,CL.POS> ; S.R=R.CUS<EB.CUS.LOCAL.REF,SR.POS>
		P.R=R.CUS<EB.CUS.LOCAL.REF,PR.POS> ; C.R=R.CUS<EB.CUS.LOCAL.REF,CR.POS> ; I.D=R.CUS<EB.CUS.LOCAL.REF,ID.POS>
		I.N=R.CUS<EB.CUS.LOCAL.REF,IN.POS> ; S.U=R.CUS<EB.CUS.LOCAL.REF,SU.POS> ; C.M=R.CUS<EB.CUS.LOCAL.REF,CM.POS>
		P.S=R.CUS<EB.CUS.LOCAL.REF,PS.POS> ; P.B=R.CUS<EB.CUS.LOCAL.REF,PB.POS> ; P.T=R.CUS<EB.CUS.LOCAL.REF,PT.POS>
		P.M=R.CUS<EB.CUS.LOCAL.REF,PM.POS> ; P.V=R.CUS<EB.CUS.LOCAL.REF,PV.POS> ; T.M=R.CUS<EB.CUS.LOCAL.REF,TM.POS>
		T.N=R.CUS<EB.CUS.LOCAL.REF,TN.POS> ; ADDR=R.CUS<EB.CUS.ADDRESS> ; T.C=R.CUS<EB.CUS.TOWN.COUNTRY>
		
		G.R=R.CUS<EB.CUS.LOCAL.REF,GR.POS> ; G.T=R.CUS<EB.CUS.LOCAL.REF,GT.POS> ; M.S=R.CUS<EB.CUS.LOCAL.REF,MS.POS>
		R.U=R.CUS<EB.CUS.LOCAL.REF,RU.POS> ; A.S=R.CUS<EB.CUS.LOCAL.REF,AS.POS> ; A.I=R.CUS<EB.CUS.LOCAL.REF,AI.POS>
		F.N=R.CUS<EB.CUS.LOCAL.REF,TN.POS> ; M.N=R.CUS<EB.CUS.LOCAL.REF,MN.POS>
		
        CHANGE ',' TO ' ' IN SNAME ; CHANGE ',' TO ' ' IN FNAME ; CHANGE ',' TO ' ' IN LNAME
        CHANGE ',' TO ' ' IN ST ; CHANGE ',' TO ' ' IN S.R ; CHANGE ',' TO ' ' IN P.R 
		CHANGE ',' TO ' ' IN C.R ; CHANGE ',' TO ' ' IN I.D ; CHANGE ',' TO ' ' IN I.N
		CHANGE ',' TO ' ' IN S.U ; CHANGE ',' TO ' ' IN C.M ; CHANGE ',' TO ' ' IN P.S
		CHANGE ',' TO ' ' IN P.B ; CHANGE ',' TO ' ' IN P.T ; CHANGE ',' TO ' ' IN P.M
		CHANGE ',' TO ' ' IN P.V ; CHANGE ',' TO ' ' IN T.M ; CHANGE ',' TO ' ' IN T.N
		CHANGE '-' TO ' ' IN LG.DOC ; CHANGE ',' TO ' ' IN ADDR ; CHANGE ',' TO ' ' IN O.D
		CHANGE ',' TO ' ' IN C.T ; CHANGE ',' TO ' ' IN A.M ; CHANGE ',' TO ' ' IN AGE
		CHANGE ',' TO ' ' IN C.N ; CHANGE ',' TO ' ' IN C.A ; CHANGE ',' TO ' ' IN E.S
		CHANGE ',' TO ' ' IN C.L ; CHANGE ',' TO ' ' IN G.R ; CHANGE ',' TO ' ' IN G.T
		CHANGE ',' TO ' ' IN M.S ; CHANGE ',' TO ' ' IN R.U ; CHANGE ',' TO ' ' IN A.S
		CHANGE ',' TO ' ' IN A.I ; CHANGE ',' TO ' ' IN F.N ; CHANGE ',' TO ' ' IN M.N
		
		
        CALL DBR('SECTOR':FM:EB.SEC.DESCRIPTION,R.CUS<EB.CUS.SECTOR>,SEC.DESC)
        CALL DBR('INDUSTRY':FM:EB.IND.DESCRIPTION,R.CUS<EB.CUS.INDUSTRY>,IND.DESC)
        CALL DBR('DEPT.ACCT.OFFICER':FM:EB.DAO.NAME,R.CUS<EB.CUS.ACCOUNT.OFFICER>,DAO.NAME)
		CALL DBR('DEPT.ACCT.OFFICER':FM:EB.DAO.NAME,R.CUS<EB.CUS.OTHER.OFFICER>,ODAO.NAME)
        CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.CUS<EB.CUS.COMPANY.BOOK>,COMP.NAME)
        CALL DBR('COMPANY':FM:EB.COM.COMPANY.NAME,R.CUS<EB.CUS.CO.CODE>,BRANCH)
		CALL DBR('CUSTOMER.STATUS':FM:EB.CST.DESCRIPTION,R.CUS<EB.CUS.CUSTOMER.STATUS>,STATUS.DESC)
		
        CHANGE ',' TO ' ' IN DAO.NAME
		CHANGE ',' TO ' ' IN ODAO.NAME
        CHANGE ',' TO ' ' IN COMP.NAME
        CHANGE ',' TO ' ' IN BRANCH
		CHANGE ',' TO ' ' IN STATUS.DESC

        IF R.CUS<EB.CUS.BIRTH.INCORP.DATE> THEN
        DOB=R.CUS<EB.CUS.BIRTH.INCORP.DATE>[1,4]:'-':R.CUS<EB.CUS.BIRTH.INCORP.DATE>[5,2]:'-':R.CUS<EB.CUS.BIRTH.INCORP.DATE>[7,2]
		END ELSE
		DOB=''
		END
		IF R.CUS<EB.CUS.LEGAL.ISS.DATE> THEN 
		LG.IS.DTE=R.CUS<EB.CUS.LEGAL.ISS.DATE>[1,4]:'-':R.CUS<EB.CUS.LEGAL.ISS.DATE>[5,2]:'-':R.CUS<EB.CUS.LEGAL.ISS.DATE>[7,2]
		END ELSE
		LG.IS.DTE=''
		END
		IF R.CUS<EB.CUS.LEGAL.EXP.DATE> THEN 
		LG.XP.DTE=R.CUS<EB.CUS.LEGAL.EXP.DATE>[1,4]:'-':R.CUS<EB.CUS.LEGAL.EXP.DATE>[5,2]:'-':R.CUS<EB.CUS.LEGAL.EXP.DATE>[7,2]
		END ELSE
		LG.XP.DTE=''
		END
		
        OUT.ARR=CUS.ID:DLM:DQUOTE(SNAME):DLM:DQUOTE(FNAME):DLM:DQUOTE(LNAME):DLM:DQUOTE(ST):DLM:DQUOTE(T.C)
        OUT.ARR:=DLM:DQUOTE(ADDR):DLM:R.CUS<EB.CUS.SECTOR>:DLM:DQUOTE(SEC.DESC):DLM:R.CUS<EB.CUS.INDUSTRY>:DLM:DQUOTE(IND.DESC)
        OUT.ARR:=DLM:R.CUS<EB.CUS.ACCOUNT.OFFICER>:DLM:DQUOTE(DAO.NAME):DLM:R.CUS<EB.CUS.OTHER.OFFICER>:DLM:DQUOTE(ODAO.NAME)
		OUT.ARR:=DLM:R.CUS<EB.CUS.CUSTOMER.STATUS>:DLM:DQUOTE(STATUS.DESC):DLM:R.CUS<EB.CUS.LEGAL.ID>:DLM:LG.IS.DTE:DLM:LG.XP.DTE:DLM:DOB
		OUT.ARR:=DLM:R.CUS<EB.CUS.COMPANY.BOOK>:DLM:DQUOTE(COMP.NAME):DLM:R.CUS<EB.CUS.TITLE>
		OUT.ARR:=DLM:DQUOTE(R.CUS<EB.CUS.GIVEN.NAMES>):DLM:DQUOTE(R.CUS<EB.CUS.FAMILY.NAME>):DLM:R.CUS<EB.CUS.GENDER>:DLM:R.CUS<EB.CUS.MARITAL.STATUS>
		OUT.ARR:=DLM:R.CUS<EB.CUS.PHONE.1>:DLM:R.CUS<EB.CUS.SMS.1>:DLM:R.CUS<EB.CUS.EMAIL.1>:DLM:DQUOTE(R.CUS<EB.CUS.OCCUPATION>)
		OUT.ARR:=DLM:R.CUS<EB.CUS.SALARY>:DLM:LG.DOC:DLM:DQUOTE(O.D):DLM:DQUOTE(C.T):DLM:DQUOTE(A.M):DLM:DQUOTE(AGE):DLM:DQUOTE(C.N):DLM:DQUOTE(C.A)
		OUT.ARR:=DLM:DQUOTE(E.S):DLM:DQUOTE(C.L):DLM:DQUOTE(S.R):DLM:DQUOTE(P.R):DLM:DQUOTE(C.R):DLM:DQUOTE(I.D):DLM:DQUOTE(I.N):DLM:DQUOTE(S.U)
		OUT.ARR:=DLM:DQUOTE(C.M):DLM:DQUOTE(P.S):DLM:DQUOTE(P.B):DLM:DQUOTE(P.T):DLM:DQUOTE(P.M):DLM:DQUOTE(P.V):DLM:DQUOTE(T.M):DLM:DQUOTE(T.N)
        OUT.ARR:=DLM:DQUOTE(G.R):DLM:DQUOTE(G.T):DLM:DQUOTE(M.S):DLM:DQUOTE(R.U):DLM:DQUOTE(A.S):DLM:DQUOTE(A.I):DLM:DQUOTE(F.N)
		OUT.ARR:=DLM:DQUOTE(M.N):DLM:R.CUS<EB.CUS.CO.CODE>:DLM:DQUOTE(BRANCH):DLM:REPORT.DATE:DLM:DB.DATE

        PY.LIST<-1>=OUT.ARR
        CNT=DCOUNT(PY.LIST,@FM)
        IF CNT EQ '80000' THEN
         GOSUB LOAD.DATA
		END
		OUT.ARR='' ; CUS.ID='' ; SEC.DESC='' ; IND.DESC='' ; ID.DESC='' ; R.CUS='' ; DOB='' ; OP.DTE='' ; ST='' ; SNAME='' ; FNAME=''
		STATUS.DESC='' ; LG.DOC='' ; S.I='' ; H.C='' ; H.D='' ; LNAME='' ; LG.XP.DTE='' ; LG.IS.DTE='' ; H.N=''
		DAO.NAEM='' ; ODAO.NAME='' ; COMP.NAME='' ; BRANCH='' ; STAT.DESC=''
				
        S.R='' ; P.R ='' ; C.R='' ; I.D='' ; I.N='' ; S.U='' ; C.M='' ; P.S=''
		P.B='' ; P.T='' ; P.M='' ; P.V='' ; T.M='' ; T.N='' ; ADDR='' ; O.D=''
		C.T='' ; A.M='' ; AGE='' ; C.N='' ; C.A='' ; E.S='' ; C.L='' ; G.R='' ; G.T=''
		M.S='' ; R.U='' ; A.S='' ; A.I='' ; F.N='' ; M.N=''
    REPEAT
    RETURN
LOAD.DATA:
     IF PY.LIST NE '' THEN
	 PY.LIST=TRIM(PY.LIST,',','A')
	 PY.LIST=TRIM(PY.LIST,"'",'A')
	 PY.LIST=TRIM(PY.LIST,"~",'A')
	 CHANGE FM TO ',' IN PY.LIST
     REQUEST=PY.LIST:"~CU"
     CALL EB.CALL.JAVA.API(API.ID,REQUEST,V.RESPONSE,RET.ERR)
    PY.LIST=''
	END
    RETURN
END

===================================================================================================================
STAGING TABLE
===================================================================================================================
CREATE TABLE CUSTOMER
(
  CUSTOMERID VARCHAR(10),
  SHORT_NAME VARCHAR(100),
  NAME_1 VARCHAR(100),
  NAME_2 VARCHAR(100),
  STREET VARCHAR(200),
  TOWN_COUNTRY VARCHAR(100),
  ADDRESS VARCHAR(200),
  SECTOR VARCHAR(10),
  SECTOR_DESC VARCHAR(100),
  INDUSTRY VARCHAR(10),
  INDUSTRY_DESC VARCHAR(100),
  ACCOUNT_OFFICER VARCHAR(10),
  OFFICER_NAME VARCHAR(100),
  OTHER_OFFICER VARCHAR(10),
  OTHER_NAME VARCHAR(100),
  CUSTOMER_STATUS VARCHAR(10),
  STATUS_DESC VARCHAR(100),
  LEGAL_ID VARCHAR(100),
  LEGALID_ISSUE_DATE VARCHAR(20),
  LEGALID_EXP_DATE VARCHAR(20),
  DOB VARCHAR(20),
  COMPANY_BOOK VARCHAR(50),
  BOOK_NAME VARCHAR(100),
  TITLE VARCHAR(20),
  GIVEN_NAMES VARCHAR(100),
  FAMILY_NAME VARCHAR(100),
  GENDER VARCHAR(10),
  MARITAL_STATUS VARCHAR(20), 
  PHONE_1 VARCHAR(50),
  SMS_1 VARCHAR(50),
  EMAIL_1 VARCHAR(50),
  OCCUPATION VARCHAR(100), 
  SALARY VARCHAR(20),
  LEGALID_DOC_NAME VARCHAR(100), 
  OPENING_DATE VARCHAR(20),
  CUST_TYPE VARCHAR(5),
  ACCOMMODATION_TYPE VARCHAR(5),
  AGE VARCHAR(100),
  CONTACT_NAME VARCHAR(100),
  CURR_ADDRESS VARCHAR(5),
  EMPLOY_STATUS VARCHAR(5),
  CLASSIFICATION VARCHAR(5),
  SALARY_RANGE VARCHAR(5),
  PROFESSION VARCHAR(5),
  CORRESPOND_NAME VARCHAR(100),
  ID_TYPES VARCHAR(5),
  INITIALS VARCHAR(50),
  SUBURB_TOWN VARCHAR(100),
  CITY_MUNICIPAL VARCHAR(100),
  PROVINCE_STATE VARCHAR(100),
  PO_BOX_NO VARCHAR(100),
  PO_SUBURB_TOWN VARCHAR(100),
  PO_CITY_MUNICIPAL VARCHAR(100),
  PO_PROV_STATE VARCHAR(100),
  TEL_MOBILE VARCHAR(50),
  TAX_REG_NO VARCHAR(100), 
  GROUP VARCHAR(50),
  GROUP_TYPE VARCHAR(100),
  MEMBER_STATUS VARCHAR(50),
  RURAL_URBAN VARCHAR(5),
  ALTSECTOR VARCHAR(5),
  ALTINDUSTRY VARCHAR(5),
  FATHER_NAME VARCHAR(100),
  MOTHER_NAME VARCHAR(100),
  BRANCH VARCHAR(50),
  BRANCH_NAME VARCHAR(100),
  REPORT_DATE VARCHAR(20),
  DB_DATE VARCHAR(20)
)

===================================================================================================================
DATA WAREHOUSE TABLE
===================================================================================================================
CREATE TABLE DimCUSTOMER
(
  CUSTOMERDWKEY INT IDENTITY PRIMARY KEY,
  CUSTOMERID VARCHAR(10),
  SHORT_NAME VARCHAR(100),
  NAME_1 VARCHAR(100),
  NAME_2 VARCHAR(100),
  STREET VARCHAR(200),
  TOWN_COUNTRY VARCHAR(100),
  ADDRESS VARCHAR(200),
  SECTOR VARCHAR(10),
  SECTOR_DESC VARCHAR(100),
  INDUSTRY VARCHAR(10),
  INDUSTRY_DESC VARCHAR(100),
  ACCOUNT_OFFICER VARCHAR(10),
  OFFICER_NAME VARCHAR(100),
  OTHER_OFFICER VARCHAR(10),
  OTHER_NAME VARCHAR(100),
  CUSTOMER_STATUS VARCHAR(10),
  STATUS_DESC VARCHAR(100),
  LEGAL_ID VARCHAR(100),
  LEGALID_ISSUE_DATE VARCHAR(20),
  LEGALID_EXP_DATE VARCHAR(20),
  DOB VARCHAR(20),
  COMPANY_BOOK VARCHAR(50),
  BOOK_NAME VARCHAR(100),
  TITLE VARCHAR(20),
  GIVEN_NAMES VARCHAR(100),
  FAMILY_NAME VARCHAR(100),
  GENDER VARCHAR(10),
  MARITAL_STATUS VARCHAR(20), 
  PHONE_1 VARCHAR(50),
  SMS_1 VARCHAR(50),
  EMAIL_1 VARCHAR(50),
  OCCUPATION VARCHAR(100), 
  SALARY VARCHAR(20),
  LEGALID_DOC_NAME VARCHAR(100), 
  OPENING_DATE VARCHAR(20),
  CUST_TYPE VARCHAR(5),
  ACCOMMODATION_TYPE VARCHAR(5),
  AGE VARCHAR(100),
  CONTACT_NAME VARCHAR(100),
  CURR_ADDRESS VARCHAR(5),
  EMPLOY_STATUS VARCHAR(5),
  CLASSIFICATION VARCHAR(5),
  SALARY_RANGE VARCHAR(5),
  PROFESSION VARCHAR(5),
  CORRESPOND_NAME VARCHAR(100),
  ID_TYPES VARCHAR(5),
  INITIALS VARCHAR(50),
  SUBURB_TOWN VARCHAR(100),
  CITY_MUNICIPAL VARCHAR(100),
  PROVINCE_STATE VARCHAR(100),
  PO_BOX_NO VARCHAR(100),
  PO_SUBURB_TOWN VARCHAR(100),
  PO_CITY_MUNICIPAL VARCHAR(100),
  PO_PROV_STATE VARCHAR(100),
  TEL_MOBILE VARCHAR(50),
  TAX_REG_NO VARCHAR(100), 
  [GROUP] VARCHAR(50),
  GROUP_TYPE VARCHAR(100),
  MEMBER_STATUS VARCHAR(50),
  RURAL_URBAN VARCHAR(5),
  ALTSECTOR VARCHAR(5),
  ALTINDUSTRY VARCHAR(5),
  FATHER_NAME VARCHAR(100),
  MOTHER_NAME VARCHAR(100),
  BRANCH VARCHAR(50),
  BRANCH_NAME VARCHAR(100),
  CURRENT_FLAG BIT DEFAULT 1
)
GO
====================================================================================================
STORED PROCEDURE SQL SERVER (67 Parameters)
====================================================================================================

CREATE PROCEDURE spCUSTOMER
(
  @pCUSTOMERID VARCHAR(10),@pSHORT_NAME VARCHAR(100),@pNAME_1 VARCHAR(100),@pNAME_2 VARCHAR(100),
  @pSTREET VARCHAR(200),@pTOWN_COUNTRY VARCHAR(100),@pADDRESS VARCHAR(200),@pSECTOR VARCHAR(10),
  @pSECTOR_DESC VARCHAR(100),@pINDUSTRY VARCHAR(10),@pINDUSTRY_DESC VARCHAR(100),@pACCOUNT_OFFICER VARCHAR(10),
  @pOFFICER_NAME VARCHAR(100),@pOTHER_OFFICER VARCHAR(10),@pOTHER_NAME VARCHAR(100),@pCUSTOMER_STATUS VARCHAR(10),
  @pSTATUS_DESC VARCHAR(100),@pLEGAL_ID VARCHAR(100),@pLEGALID_ISSUE_DATE VARCHAR(20),@pLEGALID_EXP_DATE VARCHAR(20),
  @pDOB VARCHAR(20),@pCOMPANY_BOOK VARCHAR(50),@pBOOK_NAME VARCHAR(100),@pTITLE VARCHAR(20),@pGIVEN_NAMES VARCHAR(100),
  @pFAMILY_NAME VARCHAR(100),@pGENDER VARCHAR(10),@pMARITAL_STATUS VARCHAR(20),@pPHONE_1 VARCHAR(50),@pSMS_1 VARCHAR(50),
  @pEMAIL_1 VARCHAR(50),@pOCCUPATION VARCHAR(100),@pSALARY VARCHAR(20),@pLEGALID_DOC_NAME VARCHAR(100),@pOPENING_DATE VARCHAR(20),
  @pCUST_TYPE VARCHAR(5),@pACCOMMODATION_TYPE VARCHAR(5),@pAGE VARCHAR(100),@pCONTACT_NAME VARCHAR(100),@pCURR_ADDRESS VARCHAR(5),
  @pEMPLOY_STATUS VARCHAR(5),@pCLASSIFICATION VARCHAR(5),@pSALARY_RANGE VARCHAR(5),@pPROFESSION VARCHAR(5),@pCORRESPOND_NAME VARCHAR(100),
  @pID_TYPES VARCHAR(5),@pINITIALS VARCHAR(50),@pSUBURB_TOWN VARCHAR(100),@pCITY_MUNICIPAL VARCHAR(100),@pPROVINCE_STATE VARCHAR(100),
  @pPO_BOX_NO VARCHAR(100),@pPO_SUBURB_TOWN VARCHAR(100),@pPO_CITY_MUNICIPAL VARCHAR(100),@pPO_PROV_STATE VARCHAR(100),@pTEL_MOBILE VARCHAR(50),@pTAX_REG_NO VARCHAR(100),
  @pGROUP VARCHAR(50),@pGROUP_TYPE VARCHAR(100),@pMEMBER_STATUS VARCHAR(50),@pRURAL_URBAN VARCHAR(5),@pALTSECTOR VARCHAR(5),@pALTINDUSTRY VARCHAR(5),
  @pFATHER_NAME VARCHAR(100),@pMOTHER_NAME VARCHAR(100),@pBRANCH VARCHAR(50),@pBRANCH_NAME VARCHAR(100),@pREPORT_DATE VARCHAR(20),@pDB_DATE VARCHAR(20)
)
AS
BEGIN
  INSERT INTO CUSTOMER
  (CUSTOMERID,SHORT_NAME,NAME_1,NAME_2,STREET,TOWN_COUNTRY,ADDRESS,SECTOR,SECTOR_DESC,INDUSTRY,INDUSTRY_DESC,
  ACCOUNT_OFFICER,OFFICER_NAME,OTHER_OFFICER,OTHER_NAME,CUSTOMER_STATUS,STATUS_DESC,LEGAL_ID,LEGALID_ISSUE_DATE,
  LEGALID_EXP_DATE,DOB,COMPANY_BOOK,BOOK_NAME,TITLE,GIVEN_NAMES,FAMILY_NAME,GENDER,MARITAL_STATUS,PHONE_1,
  SMS_1,EMAIL_1,OCCUPATION,SALARY,LEGALID_DOC_NAME,OPENING_DATE,CUST_TYPE,ACCOMMODATION_TYPE,AGE,
  CONTACT_NAME,CURR_ADDRESS,EMPLOY_STATUS,CLASSIFICATION,SALARY_RANGE,PROFESSION,CORRESPOND_NAME,ID_TYPES,
  INITIALS,SUBURB_TOWN,CITY_MUNICIPAL,PROVINCE_STATE,PO_BOX_NO,PO_SUBURB_TOWN,PO_CITY_MUNICIPAL,PO_PROV_STATE,TEL_MOBILE,TAX_REG_NO,
  GROUP,GROUP_TYPE,MEMBER_STATUS,RURAL_URBAN,ALTSECTOR,ALTINDUSTRY,FATHER_NAME,MOTHER_NAME,BRANCH,BRANCH_NAME,
  REPORT_DATE,DB_DATE
)
  VALUES
    (@pCUSTOMERID,@pSHORT_NAME,@pNAME_1,@pNAME_2,@pSTREET,@pTOWN_COUNTRY,@pADDRESS,@pSECTOR,@pSECTOR_DESC,@pINDUSTRY,@pINDUSTRY_DESC,
  @pACCOUNT_OFFICER,@pOFFICER_NAME,@pOTHER_OFFICER,@pOTHER_NAME,@pCUSTOMER_STATUS,@pSTATUS_DESC,@PLEGAL_ID,@pLEGALID_ISSUE_DATE,
  @pLEGALID_EXP_DATE,@pDOB,@pCOMPANY_BOOK,@pBOOK_NAME,@pTITLE,@pGIVEN_NAMES,@pFAMILY_NAME,@pGENDER,@pMARITAL_STATUS,@pPHONE_1,
  @pSMS_1,@pEMAIL_1,@pOCCUPATION,@pSALARY,@pLEGALID_DOC_NAME,@pOPENING_DATE,@pCUST_TYPE,@pACCOMMODATION_TYPE,@pAGE,
  @pCONTACT_NAME,@pCURR_ADDRESS,@pEMPLOY_STATUS,@pCLASSIFICATION,@pSALARY_RANGE,@pPROFESSION,@pCORRESPOND_NAME,@pID_TYPES,
  @pINITIALS,@pSUBURB_TOWN,@pCITY_MUNICIPAL,@pPROVINCE_STATE,@pPO_BOX_NO,@pPO_SUBURB_TOWN,@pPO_CITY_MUNICIPAL,@pPO_PROV_STATE,@pTEL_MOBILE,@pTAX_REG_NO,
  @pGROUP,@pGROUP_TYPE,@pMEMBER_STATUS,@pRURAL_URBAN,@pALTSECTOR,@pALTINDUSTRY,@pFATHER_NAME,@pMOTHER_NAME,@pBRANCH,@pBRANCH_NAME,
  @pREPORT_DATE,@pDB_DATE
)
END